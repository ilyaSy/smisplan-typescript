{"version":3,"sources":["components/UI/Notification.ts","context/PrintPDFContext.tsx","storages/middleware/apiMiddleware.ts","storages/selectors/metadata.ts","storages/actions/data.ts","components/UI/LoadingComponent/index.tsx","utils/getTableParameters.ts","storages/actions/metadata.ts","storages/selectors/data.ts","components/UI/ModalWithForm/index.tsx","utils/hooks/useGetMetaDictionary.ts","components/Modals/DataAddModal/index.tsx","components/UI/LoadingComponent/LoadingComponent.module.scss","components/Content/Content.module.scss","App.module.scss","constants/constants.ts","context/UserContext.tsx","storages/reducers/metadata.ts","utils/crudReduxUpdater.ts","storages/reducers/data.ts","storages/reducers/index.ts","storages/storage.tsx","components/Header/index.tsx","components/UI/SuspenseFallback/index.tsx","components/UI/PrintPDF/index.tsx","components/UI/ModalWithSelect/index.tsx","components/Sidebar/index.tsx","components/Content/index.tsx","utils/apiMockAdapter/utils.js","utils/apiMockAdapter/index.js","App.tsx","index.tsx","context/DictionaryContext.tsx","components/Sidebar/Sidebar.module.scss","components/Header/Header.module.scss","utils/convertDataItem.ts","utils/hooks/useGetTablename.ts"],"names":["Notification","action","type","message","description","duration","notification","placement","PrintPDFContext","React","createContext","usePrintPDFContext","useContext","PrintPDFContextProvider","children","useState","printMode","setPrintMode","dataRef","setDataRef","dataPrintRef","useMemo","setDataPrintRef","useCallback","refObject","dataPrintMode","setDataPrintMode","mode","Provider","value","defaultHeaders","apiMiddleware","dispatch","a","method","url","body","headers","test","axios","request","data","JSON","stringify","response","console","log","payload","useMetadataSelector","useSelector","state","metadataReducer","dataGetAction","tablename","urlApi","dataDeleteAction","dataAddAction","dataUpdateAction","LoadingComponent","indicator","style","fontSize","spin","className","classes","memo","getTableParameters","metadata","find","c","id","metadataGetAction","useDataSelector","dataReducer","ModalWithForm","title","okButtonTitle","isOpen","handleOk","handleClose","formItems","additionalButtons","initialValues","modalDictionary","Form","useForm","form","contextDictionary","useDictionaryContext","dictionary","setDictionary","useEffect","onOk","callback","validateFields","then","values","convertDataItem","catch","visible","onCancel","footer","danger","onClick","map","name","preserve","labelCol","span","wrapperCol","onFinish","onFinishFailed","formItem","Item","label","rules","valuePropName","includes","disabled","TextArea","allowClear","filterOption","option","RegExp","undefined","showSearch","options","Object","entries","text","format","showTime","mapDictionaryArrayToObject","array","fromEntries","tag","DataAddModal","onAddHandler","onClose","modalTablename","modalInitialValues","setFormItems","setInitialValues","setMetadata","metadataAction","metadataResponse","filter","forEach","validValues","getDataUrl","get","dictionaryResponse","prev","useGetMetaDictionary","modalTableMetadata","modalTableDictionary","contextMetadata","defaultData","d","defaultValue","initialData","m","sort","b","tableIndex","addMenuIndex","required","addMenuTitle","module","exports","modes","realData","mainModes","e","DATE_FORMAT_FULLDATE","DATE_FORMAT_DATE","DATE_FORMAT_TIME","UserContext","UserContextProvider","email","login","user","setUser","initialState","isLoading","isError","metadataReducerLoading","metadataReducerError","error","statusText","metadataReducerResponse","sourceData","crudReduxDataUpdater","stateData","dataReducerLoading","dataReducerError","dataReducerResponse","reducers","combineReducers","storage","createStore","composeWithDevTools","applyMiddleware","thunk","StorageProvider","store","Header","useGetTablename","userContext","header","navigation","selectedKeys","theme","to","SubMenu","icon","UserOutlined","logout","LogoutOutlined","Index","PrintPDF","print","useReactToPrint","content","document","getElementsByClassName","onAfterPrint","toggleOpen","handlePrint","list","onSubmit","setValue","setIsOpen","handleToggle","handleChange","target","handleSubmit","ModalPrintSelect","okButtonProps","Group","onChange","direction","optionTitle","optionValue","useModalWithSelect","PrinterOutlined","Sidebar","useDispatch","sidebarAction","setSidebarAction","isErrorData","isLoadingData","handleCloseModal","sidebar","PlusCircleTwoTone","twoToneColor","SettingOutlined","DataTable","lazy","DataCalendar","Content","location","useLocation","navigate","useNavigate","pathname","path","element","fallback","SuspenseFallback","dataCounterFactory","counter","task","length","discussion","require","developers","projects","metaData","calendar","event","mock","MockAdapter","delayResponse","dataCount","replyPostWithOK","mockResponseConfig","parse","onGet","reply","pathGetTaskDiscussions","mockRequestConfig","urlArray","split","connectedTable","table","mainTable","status","idTask","date","time","result","onPut","onPatch","onDelete","onPost","setMockAdapter","App","main","basename","hostname","ReactDOM","render","StrictMode","DictionaryContext","getElementById","DictionaryContextProvider","dict","setDict","invertDictionary","property","info","k","parameter","parameterDictionary","invert","moment","join","Date","toLowerCase","setTablename","replace"],"mappings":"kIAAA,aAaeA,IAVM,SAACC,GACpB,IAAQC,EAA6CD,EAA7CC,KAAMC,EAAuCF,EAAvCE,QAASC,EAA8BH,EAA9BG,YAAvB,EAAqDH,EAAjBI,gBAApC,MAA+C,EAA/C,EACAC,IAAaJ,GAAM,CACjBC,QAASA,EACTC,YAAaA,EACbG,UAAW,WACXF,SAAUA,M,uICERG,EAAkBC,IAAMC,cAAgC,IAEjDC,EAAqB,WAEhC,OADgBC,qBAAWJ,IAIhBK,EAAoC,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAClD,EAAkCC,qBAAlC,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA8BF,qBAA9B,mBAAOG,EAAP,KAAgBC,EAAhB,KAEMC,EAAeC,mBAAQ,kBAAMH,IAAS,CAACA,IACvCI,EAAkBC,uBAAY,SAACC,GAAD,OAAeL,EAAWK,KAAY,IAEpEC,EAAgBJ,mBAAQ,kBAAML,IAAW,CAACA,IAC1CU,EAAmBH,uBAAY,SAACI,GAAD,OAAsBV,EAAaU,KAAO,IAE/E,OACE,cAACnB,EAAgBoB,SAAjB,CAA0BC,MAAO,CAC/BJ,gBACAC,mBACAN,eACAE,mBAJF,SAMGR,M,mJChCMgB,EAA8B,CACzC,eAAgB,oBAGLC,EACX,kBACA,SAACC,GAAD,8CACA,WAAO/B,GAAP,6BAAAgC,EAAA,yDACU/B,EAA8DD,EAA9DC,KADV,EACwED,EAAxDiC,cADhB,MACyB,MADzB,EACgCC,EAAwClC,EAAxCkC,IAAKC,EAAmCnC,EAAnCmC,KADrC,EACwEnC,EAA7BoC,eAD3C,MACqDP,EADrD,EAIO,UAAUQ,KAAKpC,GAJtB,yCAKW8B,EAAS/B,IALpB,cAQE+B,EAAS,CAAC9B,KAAMA,EAAO,aARzB,kBAW2BqC,IAAMC,QAAQ,CACnCN,SACAC,MACAM,KAAMC,KAAKC,UAAUP,GACrBC,YAfN,OAWUO,EAXV,OAkBIC,QAAQC,IAAIJ,KAAKC,UAAUP,IAE3BJ,EAAS,CAAC9B,KAAMA,EAAO,YAAa6C,QAASH,EAASH,KAAMP,WApBhE,kDAsBIF,EAAS,CAAC9B,KAAMA,EAAO,SAAU6C,QAAQ,EAAD,KAtB5C,0DADA,yD,iCCTF,8CAIaC,EAAsB,WAGjC,OAF6BC,aAAY,SAACC,GAAD,OAA+CA,EAAMC,qB,iCCLhG,oJAIMjD,EAAO,eAEAkD,EAAmD,SAACC,GAC/D,MAAO,CACLnD,OACAiC,IAAI,GAAD,OAAKmB,IAAL,YAAeD,EAAf,KACHnB,OAAQ,QAICqB,EAEX,SAACF,EAAWjB,GACV,MAAO,CACLlC,OACAiC,IAAI,GAAD,OAAKmB,IAAL,YAAeD,EAAf,KACHnB,OAAQ,SACRE,SAIOoB,EAEX,SAACH,EAAWjB,GACV,MAAO,CACLlC,OACAiC,IAAI,GAAD,OAAKmB,IAAL,YAAeD,EAAf,KACHnB,OAAQ,MACRE,SAIOqB,EAAyE,SAACJ,EAAWjB,GAChG,MAAO,CACLlC,OACAiC,IAAI,GAAD,OAAKmB,IAAL,YAAeD,EAAf,KACHnB,OAAQ,QACRE,U,iCCzCJ,8DAKMsB,EAA6B,WACjC,OACE,cAAC,IAAD,CACEC,UAAW,cAAC,IAAD,CAAiBC,MAAO,CAAEC,SAAU,KAAOC,MAAI,IAE1DC,UAAWC,IAAQ,wBAKVvD,QAAMwD,KAAKP,I,iCCT1B,kCAAO,IAAMQ,EAA0C,SAACC,GACtD,OAAOA,EAASC,MAAK,SAACC,GAAD,MAAgB,uBAATA,EAAEC,Q,iCCPhC,8CAGaC,EAAuD,SAAClB,GACnE,MAAO,CACLnD,KAAM,mBACNiC,IAAI,GAAD,OAAKmB,IAAL,YAAeD,EAAf,UACHnB,OAAQ,S,iCCPZ,8CAIasC,EAAkB,WAG7B,OAFyBvB,aAAY,SAACC,GAAD,OAA2CA,EAAMuB,iB,gJCoIzEC,IAjIiC,SAAC,GAU1C,IATLC,EASI,EATJA,MASI,IARJC,qBAQI,MARY,yDAQZ,EAPJC,EAOI,EAPJA,OACAC,EAMI,EANJA,SACAC,EAKI,EALJA,YACAC,EAII,EAJJA,UACAC,EAGI,EAHJA,kBACAC,EAEI,EAFJA,cACAC,EACI,EADJA,gBAEA,EAAeC,IAAKC,UAAbC,EAAP,oBAEoBC,EAAsBC,cAAlCC,WACR,EAAoC1E,mBAA6B,MAAjE,mBAAO0E,EAAP,KAAmBC,EAAnB,KAEAC,qBAAU,WACRD,EAAcP,GAAmBI,KAChC,CAACA,EAAmBJ,IAEvB,IAAMS,EACJ,SAACC,GAAD,OACA,WACEP,EACGQ,iBACAC,MAAK,SAACC,GACDP,IACFO,EAASC,YAAgBR,EAAYO,EAAQhB,EAAW,QAExDa,EAASG,OAGZE,MAAMrD,QAAQC,OAGrB,OACE+B,EACE,cAAC,IAAD,CACEF,MAAOA,EACPwB,QAAStB,EACTe,KAAMA,EAAKd,GACXsB,SAAUrB,EACVsB,OAAQ,CACN,cAAC,IAAD,CAA0CnG,KAAK,UAAUoG,QAAM,EAACC,QAASxB,EAAzE,iDAAY,+BAEZE,EAAkBuB,KAAI,gBAAE7B,EAAF,EAAEA,MAAO4B,EAAT,EAASA,QAAT,OACpB,cAAC,IAAD,CAEEA,QAASX,EAAKW,GAFhB,SAIG5B,GAJH,wBACwBA,EADxB,eAQF,cAAC,IAAD,CAAsCzE,KAAK,UAAUqG,QAASX,EAAKd,GAAnE,SAA+EF,GAAnE,4BAjBhB,SAoBE,cAAC,IAAD,CACE6B,KAAK,QACLC,UAAU,EACVC,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,IACpB1B,cAAeA,GAAgC,GAC/C4B,SAAUjE,QAAQC,IAClBiE,eAAgBlE,QAAQC,IACxBwC,KAAMA,EARR,SAWIN,EAAUwB,KAAI,SAACQ,GAAD,OACZ,cAAC,IAAKC,KAAN,CAEEC,MAAOF,EAASE,MAChBT,KAAMO,EAASP,KACfU,MAAOH,EAASG,MAChBC,cAAiC,aAAlBJ,EAAS9G,KAAsB,UAAY,QAL5D,SAQK,CAAC,SAAU,UAAUmH,SAASL,EAAS9G,MACtC,cAAC,IAAD,CAAOoH,SAAUN,EAASM,WACV,aAAlBN,EAAS9G,KACP,cAAC,IAAMqH,SAAP,CAAgBD,SAAUN,EAASM,WACnB,aAAlBN,EAAS9G,KACP,cAAC,IAAD,CAAUoH,SAAUN,EAASM,WAC9B,CAAC,SAAU,gBAAgBD,SAASL,EAAS9G,MAC5C,cAAC,IAAD,CACEoH,SAAUN,EAASM,SACnBE,YAAU,EACVC,aAAc,SAAC5F,EAAe6F,GAAhB,OAA2BC,OAAO9F,EAAO,KAAKS,KAAnB,iBAA2BoF,QAA3B,IAA2BA,OAA3B,EAA2BA,EAAQR,SAC5EvF,KAAwB,iBAAlBqF,EAAS9G,KAA0B,gBAAa0H,EACtDC,YAAU,EACVC,QACErC,EACIsC,OAAOC,QAAQvC,EAAWuB,EAASP,OAChCD,KAAI,yCACH,CAAE3E,MADC,KACMqF,MADN,KACkBe,SAEzB,KAIQ,SAAlBjB,EAAS9G,KACP,cAAC,IAAD,CACEgI,OAAO,aACPZ,SAAUN,EAASM,WAGL,aAAlBN,EAAS9G,KACP,cAAC,IAAD,CACEgI,OAAO,sBACPZ,SAAUN,EAASM,SACnBa,UAAQ,IAGM,SAAlBnB,EAAS9G,KACP,cAAC,IAAD,CACEgI,OAAO,WACPZ,SAAUN,EAASM,WAEnB,MAhDDN,EAASP,aAuDtB,O,qHC1HF2B,EAA6B,SAACC,GAClC,OAAON,OAAOO,YACZD,EAAM7B,KAAI,SAAC3E,GAAD,MAAW,CAACA,EAAMA,MAAO,CACjCoG,KAAMpG,EAAMoG,KACZpG,MAAOA,EAAMA,MACb0G,IAAG,OAAE1G,QAAF,IAAEA,OAAF,EAAEA,EAAO0G,W,iCC+EHC,IA5E+B,SAAC,GAMxC,IALL3D,EAKI,EALJA,OACA4D,EAII,EAJJA,aACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,eACAC,EACI,EADJA,mBAEA,EAAkC7H,mBAAsB,IAAxD,mBAAOiE,EAAP,KAAkB6D,EAAlB,KACA,EAA0C9H,mBAAgB,IAA1D,mBAAOmE,EAAP,KAAsB4D,EAAtB,KACA,EAAgC/H,mBAAyB,MAAzD,mBAAOoD,EAAP,KAAiB4E,EAAjB,KACA,EAAoChI,mBAA6B,MAAjE,mBAAO0E,EAAP,KAAmBC,EAAnB,KAEA,EDVkC,SAACrC,GACnC,MAAgCtC,mBAAyB,MAAzD,mBAAOoD,EAAP,KAAiB4E,EAAjB,KACA,EAAoChI,mBAA6B,MAAjE,mBAAO0E,EAAP,KAAmBC,EAAnB,KAyCA,OAvCAC,qBAAU,WACR,GAAItC,EAAW,CACb,IAAM2F,EAAiBzE,YAAkBlB,GAEzCd,IAAMC,QAAQ,CACZN,OAAQ8G,EAAe9G,OACvBC,IAAK6G,EAAe7G,IACpBE,QAASP,MAERiE,MAAK,SAACkD,GACLF,EAAYE,EAAiBxG,MAE7BwG,EAAiBxG,KACdyG,QAAO,gBAAGhJ,EAAH,EAAGA,KAAH,MAA8B,CAAC,SAAU,gBAAgBmH,SAASnH,MACzEiJ,SAAQ,YAA0E,IAAvE7E,EAAsE,EAAtEA,GAAI8E,EAAkE,EAAlEA,YACTA,EAA4BC,WAC/B9G,IAAM+G,IAAKF,EAA4BC,YACpCtD,MAAK,SAACwD,GACL7D,GAAc,SAAC8D,GACb,OAAO,2BACFA,GADL,kBAEGlF,EAAK8D,EAA2BmB,EAAmB9G,cAIzDyD,MAAMrD,QAAQC,KACRsG,GACT1D,GAAc,SAAC8D,GACb,OAAO,2BACFA,GADL,kBAEGlF,EAAK8D,EAA2BgB,iBAOhD,CAAC/F,IAEG,CAAEc,WAAUsB,cCjCwDgE,CAAqBd,GAA9Ee,EAAlB,EAAQvF,SAA0CwF,EAAlD,EAAsClE,WACxBmE,EAAoB5G,cAA1BP,KACY8C,EAAsBC,cAAlCC,WA6CR,OA3CAE,qBAAU,WACJ+D,GAAsBC,GACxBZ,EAAYW,GACZhE,EAAciE,IACLC,GAAmBrE,IAC5BwD,EAAYa,GACZlE,EAAcH,MAEf,CACDmE,EACAC,EACAC,EACArE,IAGFI,qBAAU,WACR,GAAIX,GAAab,GAAYsB,EAAY,CACvC,IAAMoE,EAAqB9B,OAAOO,YAAYnE,EAC3C+E,QAAO,kBAAiB,kBAAjB,EAAE5E,MACTkC,KAAI,SAACsD,GAAD,MAAO,CAACA,EAAExF,GAAIwF,EAAEC,kBACjBC,EAAcpB,GAA0CiB,EAE9Df,EAAiB7C,YAAgBR,EAAYuE,EAAa7F,EAAU,gBAErE,CAACA,EAAUa,EAAW4D,EAAoBnD,IAE7CE,qBAAU,WACJxB,GACF0E,EAAa1E,EACV+E,QAAO,SAACe,GAAD,MAAgB,uBAATA,EAAE3F,MAChB4F,MAAK,SAACjI,EAAGkI,GAAJ,OAAUlI,EAAEmI,WAAaD,EAAEC,cAChC5D,KAAI,SAACyD,GACJ,MAAO,CACL/C,MAAO+C,EAAEtF,MACT8B,KAAMwD,EAAE3F,GACRpE,KAAM+J,EAAE/J,KACRiH,MAAO8C,EAAEI,aAAe,CAAC,CAAEC,UAAU,EAAMnK,QAAS,0MAA6C,GACjGmH,SAAmB,OAAT2C,EAAE3F,UAInB,CAAEH,IAGHA,EACE,cAACO,EAAA,EAAD,CACEC,MAAOT,YAAmBC,GAAUoG,cAAgB,mDACpD3F,cAAc,mDACdC,OAAQA,EACRC,SAAU2D,EACV1D,YAAa2D,EACb1D,UAAWA,EACXE,cAAeA,EACfD,kBAAmB,GACnBE,gBAAiBM,IAEjB,O,oBC1FR+E,EAAOC,QAAU,CAAC,oBAAoB,8C,oBCAtCD,EAAOC,QAAU,CAAC,QAAU,2B,oBCA5BD,EAAOC,QAAU,CAAC,KAAO,oB,gCCDzB,4MAAO,IAAMC,EAAQ,CACnB,CAAEpG,GAAI,OAAQzC,MAAO,uCAAU8I,UAAU,GACzC,CAAErG,GAAI,aAAczC,MAAO,yDAAa8I,UAAU,GAClD,CAAErG,GAAI,WAAYzC,MAAO,yDAAa8I,UAAU,GAChD,CAAErG,GAAI,QAASzC,MAAO,yDAAa8I,UAAU,IAGlCC,EAAYF,EAAMxB,QAAO,SAAC2B,GAAD,OAAOA,EAAEF,YAAUnE,KAAI,SAACqE,GAAD,OAAOA,EAAEvG,MAEzDwG,EAAuB,qBACvBC,EAAmB,aACnBC,EAAmB,QAEnB1H,EAAS,4B,47iCCLT2H,EAAcxK,IAAMC,cAAoC,IAExDwK,EAAgC,SAAC,GAAgB,IAAfpK,EAAc,EAAdA,SAC7C,EAAwBC,mBAAgB,CACtCoK,MAAO,oBACP1E,KAAM,uCACN2E,MAAO,YAHT,mBAAOC,EAAP,KAAaC,EAAb,KAMA,OACE,cAACL,EAAYrJ,SAAb,CAAsBC,MAAO,CAAEwJ,OAAMC,WAArC,SACGxK,K,2DCbDyK,EAA2B,CAC/BC,WAAW,EACX/I,KAAM,KACNgJ,SAAS,GAoBLC,EAA2C,WAC/C,MAAO,CACLF,WAAW,EACXC,SAAS,EACThJ,KAAM,OAIJkJ,EAA2D,SAACC,GAOhE,OANA5L,YAAa,CACXE,KAAM,QACNC,QAAS,gJACTC,YAAawL,EAAMzL,QAAUyL,EAAMzL,QAAUyL,EAAMC,aAG9C,CACLL,WAAW,EACXC,SAAS,EACThJ,KAAM,OAIJqJ,EAA2D,SAACC,GAChE,MAAO,CACLP,WAAW,EACX/I,KAAMsJ,EACNN,SAAS,IAIEtI,EA/CkB,WAAoD,IAAnDD,EAAkD,uDAA1CqI,EAActL,EAA4B,uCAC1EC,EAAkBD,EAAlBC,KAAM6C,EAAY9C,EAAZ8C,QACd,OAAQ7C,GACN,IAAK,2BACH,OAAOwL,IAET,IAAK,4BACH,OAAOI,EAAwB/I,GAEjC,IAAK,yBACH,OAAO4I,EAAqB5I,GAE9B,QACE,OAAO,eAAIG,K,OCrBJ8I,EAEX,SAAC9J,EAAQ+J,EAAWxJ,GAClB,OAAQP,GACN,IAAK,OACL,IAAK,MACH,OAAO+J,GAAaxJ,EAAb,sBACEwJ,GADF,CACaxJ,IAChB,GAEN,IAAK,QACH,OAAOwJ,GAAaxJ,EAAb,YACEwJ,EAAUzF,KAAI,SAACsD,GAAD,OAAOA,EAAExF,KAAQ7B,EAAe6B,GAAK7B,EAAOqH,MAC/D,GAEN,IAAK,SACH,OAAOmC,GAAaxJ,EAChBwJ,EAAU/C,QAAO,qBAAE5E,KAAgB7B,EAAe6B,MAClD,GAEN,QACE,OAAO7B,EAAI,YACFA,GACL,KCnBN8I,EAA2B,CAC/BC,WAAW,EACX/I,KAAM,KACNgJ,SAAS,GAuBLS,EAAwD,SAAChJ,GAC7D,MAAO,CACLsI,WAAW,EACXC,SAAS,EACThJ,KAAMS,EAAMT,OAKV0J,EAEJ,SAACjJ,EAAO0I,GAOR,OANE5L,YAAa,CACbE,KAAM,QACNC,QAAS,gJACTC,YAAawL,EAAMzL,QAAUyL,EAAMzL,QAAUyL,EAAMC,aAG9C,CACLL,WAAW,EACXC,SAAS,EACThJ,KAAMS,EAAMT,OAIV2J,EAEJ,SAAClK,EAAQgB,EAAOH,GAChB,MAAO,CACLyI,WAAW,EACX/I,KAAMuJ,EAAqB9J,EAAQgB,EAAMT,KAAMM,GAC/C0I,SAAS,IAIEhH,EAvDc,WAAoD,IAAnDvB,EAAkD,uDAA1CqI,EAActL,EAA4B,uCACtEC,EAA0BD,EAA1BC,KAAM6C,EAAoB9C,EAApB8C,QAASb,EAAWjC,EAAXiC,OAIvB,OAFAW,QAAQC,IAAI,CAAE5C,OAAM6C,UAASb,WAErBhC,GACN,IAAK,uBACH,OAAOgM,EAAmBhJ,GAE5B,IAAK,wBACH,OAAOkJ,EAAoBlK,EAAuBgB,EAAOH,GAE3D,IAAK,qBACH,OAAOoJ,EAAiBjJ,EAAOH,GAEjC,QACE,OAAO,eAAIG,KCrBFmJ,EALEC,0BAAgB,CAC/B7H,cACAtB,oBCCWoJ,EAAUC,sBAAYH,EAAUI,8BAAoBC,0BAAgBC,IAAO5K,OAE3E6K,EAA4B,SAAC,GAAkB,IAAhB9L,EAAe,EAAfA,SAC1C,OACE,cAAC,IAAD,CAAU+L,MAAON,EAAjB,SACGzL,K,6EC0CQgM,EA7CU,WAAO,IAAD,EACvBnL,EAAOoL,cACPC,EAAcpM,qBAAWqK,GAE/B,OACE,yBAAQlH,UAAWC,IAAQiJ,OAA3B,UACE,qBAAKlJ,UAAWC,IAAQkJ,WAAxB,SACE,cAAC,IAAD,CACEC,aAAc,CAACxL,GACfA,KAAK,aACLyL,MAAM,OAHR,SAMI1C,IAAMlE,KAAI,SAAC7E,GAAD,OACR,cAAC,IAAKsF,KAAN,UACE,cAAC,IAAD,CAASoG,GAAE,WAAM1L,EAAK2C,IAAtB,SAA6B3C,EAAKE,SADpBF,EAAK2C,WAQ7B,cAAC,IAAD,CACE3C,KAAK,aACLyL,MAAM,OACNrJ,UAAWC,IAAQ,gBAHrB,SAKE,cAAC,IAAKsJ,QAAN,CACEC,KAAM,cAACC,EAAA,EAAD,IACN7I,MAAK,UAAEqI,EAAY3B,YAAd,aAAE,EAAkB5E,KAF3B,SAKE,cAAC,IAAKQ,KAAN,CAEElD,UAAWC,IAAQyJ,OACnBF,KAAM,cAACG,EAAA,EAAD,IAHR,2CACM,WAHF,sB,iBC/BRC,EAAqC,SAAC,GAAc,IAAZzN,EAAW,EAAXA,KAC5C,OACE,qCACY,YAATA,GAAsB,cAACwD,EAAA,EAAD,IACb,aAATxD,GAAuB,wCAUfO,MAAMwD,KAAK0J,G,uGCfbC,GAAqB,WAChC,MAA0DjN,cAAlDS,EAAR,EAAQA,aAAcM,EAAtB,EAAsBA,iBAAkBD,EAAxC,EAAwCA,cAIlCoM,EAAQC,2BAAgB,CAE5BC,QAAS,kBACP3M,EACI4M,SAASC,uBAAuB,uBAAuB,GACvD,MAENC,aAAc,WACZxM,OAAiBkG,GACjBuG,GAAW,MAIfxI,qBAAU,WACJ,CAAC,QAAS,WAAW0B,SAAS5F,IAA0BoM,MAC3D,CAACA,EAAOpM,IAEX,IAAM2M,EAAc7M,uBAAY,SAACI,GAC/BD,EAAiBC,KAChB,CAACD,IAcJ,EC5BqD,SAACiD,EAAO0J,EAAMC,GACnE,MAA0BvN,qBAA1B,mBAAOc,EAAP,KAAc0M,EAAd,KACA,EAA4BxN,oBAAkB,GAA9C,mBAAO8D,EAAP,KAAe2J,EAAf,KAEMC,EAAelN,uBAAY,SAACI,GAAD,OAAmB6M,EAAU7M,KAAO,IAE/D+M,EAAe,SAAC7D,GAAD,OAAyB0D,EAAS1D,EAAE8D,OAAO9M,QAC1D+M,EAAerN,uBAAY,kBAAM+M,EAASzM,KAAQ,CAACyM,EAAUzM,IAC7DkD,EAAcxD,uBAAY,kBAAM,kBAAMkN,GAAa,MAAQ,CAACA,IAE5DI,EAAmBxN,mBAAQ,kBAC/B,cAAC,KAAD,CACEsD,MAAOA,EACPiB,KAAMgJ,EACNxI,SAAUrB,EACVoB,QAAStB,EACTiK,cAAe,CAAExH,UAAWzF,GAL9B,SAOE,cAAC,KAAMkN,MAAP,CAAaC,SAAUN,EAAc7M,MAAOA,EAA5C,SACE,cAAC,KAAD,CAAOoN,UAAU,WAAjB,SAEIZ,EAAK7H,KAAI,gBAAE0I,EAAF,EAAEA,YAAaC,EAAf,EAAeA,YAAf,OACP,cAAC,KAAD,CAAyBtN,MAAOsN,EAAhC,SAA8CD,GAAlCC,cAMrB,CAACxK,EAAO0J,EAAMxM,EAAOgD,EAAQE,EAAa6J,IAE7C,MAAO,CACLT,WAAYM,EACZI,mBACAhN,SDLqCuN,CADpB,wMAXC/N,mBAAQ,iBAAM,CAChC,CACE6N,YAAa,8FACbC,YAAa,WAEf,CACED,YAAa,sEACbC,YAAa,UAEd,IAGgFf,GAA5ED,EAAP,EAAOA,WAAYU,EAAnB,EAAmBA,iBAEnB,OACE,eAAC,IAAD,CACEtO,UAAU,aACVoE,MAAM,kDACNZ,UAAU,UAHZ,UAKG8K,EAED,cAACQ,GAAA,EAAD,CAAiB9I,QA7CF,kBAAM4H,GAAW,IA6CMvK,MAAO,CAAEC,SAAU,c,oBEzCzDyL,GAAoB,WACxB,IAAMtN,EAAWuN,cACjB,EAA0CxO,mBAAiB,IAA3D,mBAAOyO,EAAP,KAAsBC,EAAtB,KAEMpM,EAAY0J,cAElB,EAAyDvI,cAAzCkL,EAAhB,EAAOjE,QAAiCkE,EAAxC,EAA6BnE,UAIvBoE,EAAmB,kBAAMH,EAAiB,KAMhD,OAJA9J,qBAAU,WACH+J,GAAgBC,GAAeC,MACnC,CAACF,EAAaC,IAGf,eAAC,IAAD,CACEhO,KAAK,WACLyL,MAAM,OACNrJ,UAAWC,KAAQ6L,QACnB1C,aAAc,CAACqC,GAJjB,UAME,cAAChH,EAAA,EAAD,CACE3D,OAA0B,YAAlB2K,EACR/G,aAAc,SAAChG,GACbT,EAASwB,YAAcH,EAAWZ,KAEpCiG,QAASkH,IAGX,cAAC,IAAK3I,KAAN,CAAyBlD,UAAWC,KAAQ,sBAA5C,SACE,cAAC,IAAD,CAASzD,UAAU,aAAaoE,MAAM,mDAAWZ,UAAU,UAA3D,SACE,cAAC+L,EAAA,EAAD,CACE/L,UAAWC,KAAQ,qBACnBJ,MAAO,CAAEC,SAAU,QACnBkM,aAAa,UACbxJ,QA7BY,kBAAMkJ,EAAiB,iBAuB1B,WAWf,cAAC,IAAKxI,KAAN,CAA0BlD,UAAWC,KAAQ,sBAA7C,SACE,cAAC,GAAD,KADa,YAIf,eAAC,IAAKsJ,QAAN,CACEvJ,UAAWC,KAAQ,yBACnBuJ,KAAM,cAACyC,EAAA,EAAD,CAAiBpM,MAAO,CAAEC,SAAU,UAF5C,UAIE,cAAC,IAAKoD,KAAN,uFAAe,gBACf,cAAC,IAAKA,KAAN,0EAAe,YALC,gBAWThD,kBAAKqL,I,qBCjEdW,GAAYC,gBAAK,kBAAM,8DACvBC,GAAeD,gBAAK,kBAAM,8DAkCjBE,GAhCW,WACxB,IAAMC,EAAWC,cACXC,EAAWC,cAMjB,OAJA7K,qBAAU,WACkB,MAAtB0K,EAASI,UAAkBF,EAAS,WACvC,CAACF,EAAUE,IAGZ,uBAAMxM,UAAWC,KAAQ+J,QAAzB,UACE,cAAC,GAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAO2C,KAAK,WACVC,QACE,cAAC,WAAD,CAAUC,SAAU,cAACC,EAAD,CAAkB3Q,KAAK,YAA3C,SACE,cAACiQ,GAAD,CAAcxO,KAAK,mBAKzB,cAAC,IAAD,CAAO+O,KAAK,IACVC,QACE,cAAC,WAAD,CAAUC,SAAU,cAACC,EAAD,CAAkB3Q,KAAK,YAA3C,SACE,cAAC+P,GAAD,e,8DChCDa,GAAqB,SAACrO,EAAMd,GACvC,IAIIoP,EAJgB,CAClBC,KAAMvO,EAAKuO,KAAKC,OAChBC,WAAYzO,EAAKyO,WAAWD,QAEJtP,GAI1B,OAFiB,mBAAQoP,ICFrB1F,GAAO8F,EAAQ,KACfC,GAAaD,EAAQ,KACrBE,GAAWF,EAAQ,KAEnBG,GAAW,CACfN,KAAM,KACNE,WAAY,KACZK,SAAU,KACVC,MAAO,MAGTF,GAASN,KAAOG,EAAQ,KACxBG,GAASJ,WAAaC,EAAQ,KAC9BG,GAASC,SAAWJ,EAAQ,KAC5BG,GAASE,MAAQL,EAAQ,KAEzB,IAAM1O,GAAO,CACXuO,KAAM,KACNE,WAAY,KACZK,SAAU,KACVC,MAAO,MAGT/O,GAAKuO,KAAOG,EAAQ,KACpB1O,GAAKyO,WAAaC,EAAQ,KAC1B1O,GAAK8O,SAAWJ,EAAQ,KACxB1O,GAAK+O,MAAQL,EAAQ,KAErB,IAAMM,GAAO,IAAIC,KAAYnP,KAAO,CAAEoP,cAAe,MAE/CC,GAAY,CAChBZ,KAAMF,GAAmBrO,GAAM,QAC/ByO,WAAYJ,GAAmBrO,GAAM,eAGjCoP,GAAkB,SAAClQ,GAAD,OAAU,SAACmQ,GACjC,IAAM1P,EAAOM,KAAKqP,MAAMD,EAAmBrP,MAC3C,MAAO,CAAC,IAAD,aAAQ6B,GAAIsN,GAAUjQ,MAAYS,OAG5B,WAEbqP,GAAKO,MAAL,UAAc1O,IAAd,WAA8B2O,MAAM,IAAK5G,IACzCoG,GAAKO,MAAL,UAAc1O,IAAd,gBAAmC2O,MAAM,IAAKb,IAC9CK,GAAKO,MAAL,UAAc1O,IAAd,cAAiC2O,MAAM,IAAKZ,IAG5CI,GAAKO,MAAL,UAAc1O,IAAd,gBAAmC2O,MAAM,IAAKX,GAASN,MACvDS,GAAKO,MAAL,UAAc1O,IAAd,sBAAyC2O,MAAM,IAAKX,GAASJ,YAC7DO,GAAKO,MAAL,UAAc1O,IAAd,oBAAuC2O,MAAM,IAAKX,GAASC,UAC3DE,GAAKO,MAAL,UAAc1O,IAAd,iBAAoC2O,MAAM,IAAKX,GAASE,OAGxDC,GAAKO,MAAL,UAAc1O,IAAd,WAA8B2O,MAAM,IAAKxP,GAAKuO,MAC9CS,GAAKO,MAAL,UAAc1O,IAAd,iBAAoC2O,MAAM,IAAKxP,GAAKyO,YACpDO,GAAKO,MAAL,UAAc1O,IAAd,eAAkC2O,MAAM,IAAKxP,GAAK8O,UAClDE,GAAKO,MAAL,UAAc1O,IAAd,YAA+B2O,MAAM,IAAKxP,GAAK+O,OAG/C,IAAMU,EAAyB,IAAIvK,OAAJ,UAAcrE,IAAd,4BAC/BmO,GAAKO,MAAME,GAAwBD,OAAM,SAACE,GACxC,IAAMC,EAAWD,EAAkBhQ,IAAIkQ,MAAM,KACvCC,EAAiBF,EAASA,EAASnB,OAAS,GAC5CsB,EAAQH,EAASA,EAASnB,OAAS,GAAGoB,MAAM,KAAK,GACjD/N,EAAK8N,EAASA,EAASnB,OAAS,GAatC,MAAO,CAAC,IAXcxO,GAAK8P,GACxBrJ,QAAO,SAACY,GAAD,OAAOA,EAAE0I,YAAcF,KAC9BpJ,QAAO,SAACY,GAAD,MAAoB,SAAbA,EAAE2I,UAChBvJ,QAAO,SAACY,GAAD,OAAQA,EAAE4I,UAAYpO,KAC7BkC,KAAI,SAACsD,GACJ,MAAO,CACLnF,MAAM,GAAD,OAAKmF,EAAE6I,KAAP,YAAe7I,EAAE8I,MACtBxS,YAAY,GAAD,OAAK0J,EAAEsD,MAAP,aAAiBtD,EAAE+I,gBAStCpB,GAAKqB,MAAL,UAAcxP,IAAd,WAA8B2O,MAAMJ,GAAgB,SACpDJ,GAAKqB,MAAL,UAAcxP,IAAd,iBAAoC2O,MAAMJ,GAAgB,eAG1DJ,GAAKsB,QAAL,UAAgBzP,IAAhB,WAAgC2O,MAAMJ,GAAgB,SACtDJ,GAAKsB,QAAL,UAAgBzP,IAAhB,iBAAsC2O,MAAMJ,GAAgB,eAG5DJ,GAAKuB,SAAL,UAAiB1P,IAAjB,WAAiC2O,MAAMJ,GAAgB,SACvDJ,GAAKuB,SAAL,UAAiB1P,IAAjB,iBAAuC2O,MAAMJ,GAAgB,eAG7DJ,GAAKwB,OAAL,UAAe3P,IAAf,WAA+B2O,MAAM,IAAK,CAAEQ,OAAQ,KAAM7G,MAAO,KACjE6F,GAAKwB,OAAL,UAAe3P,IAAf,iBAAqC2O,MAAM,IAAK,CAAEQ,OAAQ,KAAM7G,MAAO,KC9FzEsH,GAEA,IASeC,GATO,WACpB,OACE,sBAAKpP,UAAWC,KAAQoP,KAAxB,UACE,cAAC,EAAD,IACA,cAAC,GAAD,QCDAC,I,cAAkD,qBAA/BrF,SAASqC,SAASiD,SACvC,wBACA,KAEJC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAeJ,SAAUA,GAAzB,SACE,cAAC,EAAD,UACE,cAACK,EAAA,EAAD,UACE,cAAC,EAAD,UACE,cAAClT,EAAA,EAAD,UACE,cAAC,GAAD,gBAOZwN,SAAS2F,eAAe,U,qKCdpBvL,EAA6B,SAACC,GAClC,OAAON,OAAOO,YACZD,EAAM7B,KAAI,SAAC3E,GAAD,MAAW,CAACA,EAAMA,MAAO,CACjCoG,KAAMpG,EAAMoG,KACZpG,MAAOA,EAAMA,MACb0G,IAAG,OAAE1G,QAAF,IAAEA,OAAF,EAAEA,EAAO0G,WAMZmL,EAAoBjT,IAAMC,cAAkC,IAErD8E,EAAuB,WAElC,OADgB5E,qBAAW8S,IAIhBE,EAAsC,SAAC,GAAgB,IAAf9S,EAAc,EAAdA,SACnD,EAAwBC,mBAA2C,IAAnE,mBAAO8S,EAAP,KAAaC,EAAb,KAEMrO,EAAapE,mBAAQ,kBAAMwS,IAAM,CAACA,IAClCE,EAAmB1S,mBAAQ,WAC/B,OAAO0G,OAAOO,YACZP,OAAOC,QAAQ6L,GAAMrN,KAAI,YAAuB,IAAD,mBAApBwN,EAAoB,KAAVC,EAAU,KAE7C,MAAO,CAACD,EADYjM,OAAOO,YAAYP,OAAOC,QAAQiM,GAAMzN,KAAI,mCAAE0N,EAAF,WAAY,CAAZ,KAAejM,KAAMiM,cAIxF,CAACL,IAEEnO,EAAgBnE,uBAAY,SAChC4S,EACAC,GAEA,GAAKA,EAAoC/K,WAAY,CACnD,IAAMlH,EAAOiS,EAAoC/K,WAEjD9G,IAAM+G,IAAInH,GACP4D,MAAK,SAACnD,GACLkR,GAAQ,SAACtK,GACP,OAAO,2BACFA,GADL,kBAEG2K,EAAY/L,EAA2BxF,EAASH,cAItDyD,MAAMrD,QAAQC,UAEjBgR,GAAQ,SAACtK,GACP,OAAO,2BACFA,GADL,kBAEG2K,EAAY/L,EAA2BgM,UAI7C,IAEH,OACE,cAACV,EAAkB9R,SAAnB,CAA4BC,MAAO,CACjC4D,aACAsO,mBACArO,iBAHF,SAKG5E,M,mBC9EP0J,EAAOC,QAAU,CAAC,QAAU,yBAAyB,qBAAqB,oCAAoC,wBAAwB,uCAAuC,oBAAoB,qC,mBCAjMD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,WAAa,2BAA2B,OAAS,uBAAuB,eAAe,+B,uGCa5HxE,EAAoC,SAACR,EAAYhD,EAAM0B,EAAUxC,GAC5E,OAAOoG,OAAOO,YAAYnE,EACvB+E,QAAO,SAACe,GAAD,MAAgB,uBAATA,EAAE3F,MAChBkC,KAAI,SAACyD,GAAO,IAAD,MACJ/J,EAAO+J,EAAE/J,KACTuG,EAAgB,SAAT9E,EAAkBsI,EAAExD,KAAOwD,EAAE3F,GACtCyP,EAA2C,GAO/C,GANItO,EAAWgB,KACbsN,EAAmBM,iBACjBtM,OAAOO,YAAYP,OAAOC,QAAQvC,EAAWgB,IAAOD,KAAI,yCAAiB,CAAjB,UAA4ByB,aAIpFxF,EAAKgE,GAwEP,MAAO,CAACA,OAAMmB,GAvEd,GAAa,SAATjG,EACF,OAAQzB,GACN,IAAK,OACH,MAAO,CAACuG,EAAM6N,IAAO7R,EAAKgE,IAAOyB,OAAO,eAE1C,IAAK,OACH,MAAO,CAACzB,EAAM6N,IAAO7R,EAAKgE,IAAOyB,OAAO,aAE1C,IAAK,WACH,MAAO,CAACzB,EAAM6N,IAAO7R,EAAKgE,IAAOyB,OAAO,wBAE1C,IAAK,eACH,MAAO,CAACzB,EAAMhE,EAAKgE,GAAM8N,KAAK,WAE7B,GAAa,UAAT5S,EACT,OAAQzB,GACN,IAAK,SACL,IAAK,eACH,MAAO,CACLuG,EADK,UAELhE,EAAKgE,UAFA,iBAEL,EAAY4L,MAAM,aAFb,iBAEL,EAAyB7L,KAAI,SAACsD,GAAD,OAAeiK,EAAiBjK,aAFxD,aAEL,EAAkEyK,KAAK,WAGxE,GAAa,cAAT5S,EACT,OAAQzB,GACN,IAAK,OACL,IAAK,WACH,MAAO,CAACuG,EAAM6N,IAAO,IAAIE,KAAK/R,EAAKgE,MAErC,IAAK,OACH,MAAO,CAACA,EAAM6N,IAAO,IAAIE,KAAK,cAAe/R,EAAKgE,MAEpD,IAAK,SACH,MAAO,CAACA,EAAMsN,EAAiBtR,EAAKgE,KAEtC,IAAK,eACH,MAAO,CACLA,EACAhE,EAAKgE,GAAM4L,MAAM,OAAO7L,KAAI,SAACsD,GAAD,OAAeiK,EAAiBjK,OAGhE,IAAK,WACH,MAAO,CACLrD,EACAhE,EAAKgE,IAAsC,iBAA7BhE,EAAKgE,GAAMgO,eAG7B,QACE,MAAO,CAAChO,EAAMhE,EAAKgE,SAElB,GAAa,aAAT9E,EACT,OAAQzB,GACN,IAAK,OACL,IAAK,WACL,IAAK,OACH,MAAO,CAACuG,EAAM6N,IAAO,IAAIE,OAE3B,IAAK,SASL,QACE,MAAO,CAAC/N,EAAMhE,EAAKgE,IAPrB,IAAK,eACH,MAAO,CACLA,EACAhE,EAAKgE,GAAM4L,MAAM,QAW3B,MAAO,CAAC5L,EAAMhE,EAAKgE,U,4FCnGZsG,EAAkB,WAC7B,MAAoChM,mBAAiB,QAArD,mBAAQsC,EAAR,KAAmBqR,EAAnB,KAEMrE,EAAWC,cAQjB,OANA3K,qBAAU,WACJ0K,EAASI,UACXiE,EAAarE,EAASI,SAASkE,QAAQ,gBAAiB,SAEzD,CAACtE,IAEGhN,K","file":"static/js/main.a40b752e.chunk.js","sourcesContent":["import { notification } from 'antd';\r\nimport { INotification } from \"../../types/INotification\"\r\n\r\nconst Notification = (action: INotification) => {\r\n  const { type, message, description, duration = 5 } = action;\r\n  notification[type]({\r\n    message: message,\r\n    description: description,\r\n    placement: 'topRight',\r\n    duration: duration\r\n  });\r\n}\r\n\r\nexport default Notification;\r\n","import React, { useCallback, useContext, useMemo, useState } from \"react\";\r\n\r\nexport type TPrintMode = 'print' | 'all' | 'current' | undefined;\r\n\r\ninterface IPrintPDFContext {\r\n  dataPrintMode: TPrintMode;\r\n  setDataPrintMode: (mode:TPrintMode) => void;\r\n  dataPrintRef: React.RefObject<HTMLDivElement> | undefined;\r\n  setDataPrintRef: (dataRef: React.RefObject<HTMLDivElement>) => void;\r\n}\r\n\r\nconst PrintPDFContext = React.createContext<IPrintPDFContext>({} as IPrintPDFContext);\r\n\r\nexport const usePrintPDFContext = () => {\r\n  const context = useContext(PrintPDFContext);\r\n  return context;\r\n}\r\n\r\nexport const PrintPDFContextProvider: React.FC = ({ children }) => {\r\n  const [printMode, setPrintMode] = useState<TPrintMode>();\r\n  const [dataRef, setDataRef] = useState<React.RefObject<HTMLDivElement>>();\r\n\r\n  const dataPrintRef = useMemo(() => dataRef, [dataRef]);\r\n  const setDataPrintRef = useCallback((refObject) => setDataRef(refObject), []);\r\n\r\n  const dataPrintMode = useMemo(() => printMode, [printMode]);\r\n  const setDataPrintMode = useCallback((mode: TPrintMode) => setPrintMode(mode), []);\r\n\r\n  return (\r\n    <PrintPDFContext.Provider value={{\r\n      dataPrintMode,\r\n      setDataPrintMode,\r\n      dataPrintRef,\r\n      setDataPrintRef,\r\n    }}>\r\n      {children}\r\n    </PrintPDFContext.Provider>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nimport { Middleware } from \"redux\";\r\n\r\nexport const defaultHeaders: HeadersInit = {\r\n  \"Content-type\": \"application/json\",\r\n};\r\n\r\nexport const apiMiddleware: Middleware =\r\n  () =>\r\n  (dispatch) =>\r\n  async (action: any) => {\r\n    const { type, method = \"GET\", url, body, headers = defaultHeaders } = action;\r\n    // console.log(action, type);\r\n\r\n    if (!/REQUEST/.test(type)) {\r\n      return dispatch(action);\r\n    }\r\n\r\n    dispatch({type: type + '_LOADING'});\r\n\r\n    try {\r\n      const response = await axios.request({\r\n        method,\r\n        url,\r\n        data: JSON.stringify(body),\r\n        headers,\r\n      });\r\n\r\n      console.log(JSON.stringify(body))\r\n\r\n      dispatch({type: type + '_RESPONSE', payload: response.data, method});\r\n    } catch (error) {\r\n      dispatch({type: type + '_ERROR', payload: error});\r\n    }\r\n  }\r\n","import { useSelector } from \"react-redux\";\r\nimport { TReduxData } from \"../../types/TReduxData\";\r\nimport metadataReducer from \"../reducers/data\";\r\n\r\nexport const useMetadataSelector = () => {\r\n  const metadata: TReduxData = useSelector((state: ReturnType<typeof metadataReducer>) => state.metadataReducer);\r\n\r\n  return metadata;\r\n}\r\n","import { urlApi } from \"../../constants/constants\";\r\nimport { TApiAction } from \"../../types/TApiAction\";\r\nimport { TActionBody } from \"../../types/TApiActionBody\";\r\n\r\nconst type = 'DATA_REQUEST';\r\n\r\nexport const dataGetAction: (tablename: string) => TApiAction = (tablename) => {\r\n  return {\r\n    type,\r\n    url: `${urlApi}/${tablename}/`,\r\n    method: \"GET\"\r\n  }\r\n}\r\n\r\nexport const dataDeleteAction:\r\n  (tablename: string, body: TActionBody) => TApiAction =\r\n  (tablename, body) => {\r\n    return {\r\n      type,\r\n      url: `${urlApi}/${tablename}/`,\r\n      method: \"DELETE\",\r\n      body,\r\n    }\r\n}\r\n\r\nexport const dataAddAction:\r\n  (tablename: string, body: TActionBody) => TApiAction =\r\n  (tablename, body) => {\r\n    return {\r\n      type,\r\n      url: `${urlApi}/${tablename}/`,\r\n      method: \"PUT\",\r\n      body,\r\n    }\r\n}\r\n\r\nexport const dataUpdateAction: (tablename: string, body: TActionBody) => TApiAction = (tablename, body) => {\r\n  return {\r\n    type,\r\n    url: `${urlApi}/${tablename}/`,\r\n    method: \"PATCH\",\r\n    body,\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Spin } from 'antd';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\nimport classes from './LoadingComponent.module.scss';\r\n\r\nconst LoadingComponent: React.FC = () => {\r\n  return (\r\n    <Spin\r\n      indicator={<LoadingOutlined style={{ fontSize: 240 }} spin />}\r\n      // style={{ width: '100%', height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center' }}\r\n      className={classes['loading-component']}\r\n    />\r\n  );\r\n};\r\n\r\nexport default React.memo(LoadingComponent);\r\n","import { TTableParameters } from '../types/TTableParameters';\r\n\r\ntype TGetTableParameters = (\r\n  metadata: Record<string, any>[]\r\n) => TTableParameters\r\n\r\nexport const getTableParameters: TGetTableParameters = (metadata) => {\r\n  return metadata.find((c) => c.id === 'specificParameters') as TTableParameters;\r\n}\r\n","import { urlApi } from \"../../constants/constants\";\r\nimport { TApiAction } from \"../../types/TApiAction\";\r\n\r\nexport const metadataGetAction: (tablename: string) => TApiAction = (tablename) => {\r\n  return {\r\n    type: \"METADATA_REQUEST\",\r\n    url: `${urlApi}/${tablename}-meta/`,\r\n    method: \"GET\",\r\n  }\r\n}\r\n","import { useSelector } from \"react-redux\";\r\nimport { TReduxData } from \"../../types/TReduxData\";\r\nimport dataReducer from \"../reducers/data\";\r\n\r\nexport const useDataSelector = () => {\r\n  const data: TReduxData = useSelector((state: ReturnType<typeof dataReducer>) => state.dataReducer);\r\n\r\n  return data;\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Modal, Form, Input, Button, DatePicker, TimePicker, Select, Checkbox } from 'antd';\r\nimport { useDictionaryContext } from '../../../context/DictionaryContext';\r\nimport { IFormItem } from '../../../types/IFormItem';\r\nimport { IModalWithForm } from '../../../types/IModalWithForm';\r\nimport { convertDataItem } from '../../../utils/convertDataItem';\r\nimport { TDictionary } from \"../../../types/TDictionary\";\r\n\r\nconst ModalWithForm: React.FC<IModalWithForm> = ({\r\n  title,\r\n  okButtonTitle = 'Сохранить',\r\n  isOpen,\r\n  handleOk,\r\n  handleClose,\r\n  formItems,\r\n  additionalButtons,\r\n  initialValues,\r\n  modalDictionary\r\n}) => {\r\n  const [form] = Form.useForm();\r\n\r\n  const { dictionary: contextDictionary } = useDictionaryContext();\r\n  const [dictionary, setDictionary] = useState<TDictionary | null>(null);\r\n\r\n  useEffect(() => {\r\n    setDictionary(modalDictionary || contextDictionary);\r\n  }, [contextDictionary, modalDictionary])\r\n\r\n  const onOk =\r\n    (callback: (values: any) => void) =>\r\n    () => {\r\n      form\r\n        .validateFields()\r\n        .then((values) => {\r\n          if (dictionary) {\r\n            values = convertDataItem(dictionary, values, formItems, 'form');\r\n\r\n            callback(values);\r\n          }\r\n        })\r\n        .catch(console.log)\r\n    };\r\n\r\n  return (\r\n    isOpen ? (\r\n      <Modal\r\n        title={title}\r\n        visible={isOpen}\r\n        onOk={onOk(handleOk)}\r\n        onCancel={handleClose}\r\n        footer={[\r\n          <Button key='ModalWithForm-cancel-button' type=\"primary\" danger onClick={handleClose}>Отмена</Button>,\r\n\r\n          additionalButtons.map(({title, onClick}) => (\r\n            <Button\r\n              key={`ModalWithForm-${title}-button`}\r\n              onClick={onOk(onClick)}\r\n            >\r\n              {title}\r\n            </Button>\r\n          )),\r\n\r\n          <Button key='ModalWithForm-ok-button' type=\"primary\" onClick={onOk(handleOk)}>{okButtonTitle}</Button>,\r\n        ]}\r\n      >\r\n        <Form\r\n          name='basic'\r\n          preserve={false}\r\n          labelCol={{ span: 8 }}\r\n          wrapperCol={{ span: 16 }}\r\n          initialValues={initialValues ? initialValues : {}}\r\n          onFinish={console.log}\r\n          onFinishFailed={console.log}\r\n          form={form}\r\n        >\r\n          {\r\n            formItems.map((formItem: IFormItem) => (\r\n              <Form.Item\r\n                key={formItem.name}\r\n                label={formItem.label}\r\n                name={formItem.name}\r\n                rules={formItem.rules}\r\n                valuePropName={formItem.type === \"checkbox\" ? \"checked\" : \"value\"}\r\n              >\r\n                {\r\n                  (['string', 'number'].includes(formItem.type)) ?\r\n                    <Input disabled={formItem.disabled} /> :\r\n                  formItem.type === 'fulltext' ?\r\n                    <Input.TextArea disabled={formItem.disabled} /> :\r\n                  formItem.type === 'checkbox' ?\r\n                    <Checkbox disabled={formItem.disabled} /> :\r\n                  (['select', 'multi-select'].includes(formItem.type)) ? (\r\n                    <Select\r\n                      disabled={formItem.disabled}\r\n                      allowClear\r\n                      filterOption={(value: string, option) => RegExp(value, 'i').test(`${option?.label}`)}\r\n                      mode={formItem.type === 'multi-select' ? 'multiple' : undefined}\r\n                      showSearch\r\n                      options={\r\n                        dictionary\r\n                          ? Object.entries(dictionary[formItem.name])\r\n                              .map(([value, info]) => (\r\n                                { value, label: info.text }\r\n                              ))\r\n                          : []\r\n                      }\r\n                    />\r\n                  ) :\r\n                  formItem.type === 'date' ? (\r\n                    <DatePicker\r\n                      format=\"YYYY-MM-DD\"\r\n                      disabled={formItem.disabled}\r\n                    />\r\n                  ) :\r\n                  formItem.type === 'datetime' ? (\r\n                    <DatePicker\r\n                      format=\"YYYY-MM-DD HH:mm:ss\"\r\n                      disabled={formItem.disabled}\r\n                      showTime\r\n                    />\r\n                  ) :\r\n                  formItem.type === 'time' ? (\r\n                    <TimePicker\r\n                      format=\"HH:mm:ss\"\r\n                      disabled={formItem.disabled}\r\n                    />\r\n                  ) : null\r\n                }\r\n              </Form.Item>\r\n            ))\r\n          }\r\n        </Form>\r\n      </Modal>\r\n    ) : null\r\n  );\r\n}\r\n\r\nexport default ModalWithForm;\r\n","import { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { modes } from \"../../constants/constants\"\r\nimport { TGetDataUrl, TMetadataDictionary } from \"../../context/DictionaryContext\";\r\nimport { TData } from \"../../types/TData\";\r\nimport { TDictionary } from \"../../types/TDictionary\";\r\nimport { TObject } from \"../../types/TObject\";\r\nimport { TDictionaryInfo } from \"../../types/TDictionaryInfo\";\r\nimport { defaultHeaders } from \"../../storages/middleware/apiMiddleware\";\r\nimport { metadataGetAction } from \"../../storages/actions/metadata\";\r\n\r\nconst mapDictionaryArrayToObject = (array: Record<string, TDictionaryInfo>[]): TObject<TDictionaryInfo> => {\r\n  return Object.fromEntries(\r\n    array.map((value) => [value.value, {\r\n      text: value.text,\r\n      value: value.value,\r\n      tag: value?.tag\r\n    }])\r\n  )\r\n}\r\n\r\nexport const useGetMetaDictionary = (tablename?: typeof modes[number]['id'] ) => {\r\n  const [metadata, setMetadata] = useState<TData[] | null>(null);\r\n  const [dictionary, setDictionary] = useState<TDictionary | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (tablename) {\r\n      const metadataAction = metadataGetAction(tablename);\r\n\r\n      axios.request({\r\n        method: metadataAction.method,\r\n        url: metadataAction.url,\r\n        headers: defaultHeaders as any,\r\n      })\r\n        .then((metadataResponse: any) => {\r\n          setMetadata(metadataResponse.data);\r\n\r\n          metadataResponse.data\r\n            .filter(({ type }: {type: string}) => ['select', 'multi-select'].includes(type))\r\n            .forEach(({ id, validValues }: {id: string, validValues: TMetadataDictionary}) => {\r\n              if ((validValues as TGetDataUrl).getDataUrl) {\r\n                axios.get((validValues as TGetDataUrl).getDataUrl)\r\n                  .then((dictionaryResponse) => {\r\n                    setDictionary((prev) => {\r\n                      return {\r\n                        ...prev,\r\n                        [id]: mapDictionaryArrayToObject(dictionaryResponse.data as Record<string, TDictionaryInfo>[])\r\n                      }\r\n                    });\r\n                  })\r\n                  .catch(console.log)\r\n              } else if (validValues) {\r\n                setDictionary((prev) => {\r\n                  return {\r\n                    ...prev,\r\n                    [id]: mapDictionaryArrayToObject(validValues as Record<string, TDictionaryInfo>[])\r\n                  }\r\n                });\r\n              }\r\n            })\r\n        })\r\n    }\r\n  }, [tablename]);\r\n\r\n  return { metadata, dictionary };\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { IFormItem } from '../../../types/IFormItem';\r\nimport { TData } from '../../../types/TData';\r\nimport { TDictionary } from '../../../types/TDictionary';\r\nimport { getTableParameters } from '../../../utils/getTableParameters';\r\nimport { convertDataItem } from '../../../utils/convertDataItem';\r\nimport { useGetMetaDictionary } from '../../../utils/hooks/useGetMetaDictionary';\r\nimport { useMetadataSelector } from '../../../storages/selectors/metadata';\r\nimport { useDictionaryContext } from '../../../context/DictionaryContext';\r\nimport ModalWithForm from '../../UI/ModalWithForm';\r\n\r\ninterface IDataAddModal {\r\n  isOpen: boolean;\r\n  onAddHandler: (data: TData) => void;\r\n  onClose: () => void;\r\n  modalTablename?: string;\r\n  modalInitialValues?: TData;\r\n}\r\n\r\nconst DataAddModal: React.FC<IDataAddModal> = ({\r\n  isOpen,\r\n  onAddHandler,\r\n  onClose,\r\n  modalTablename,\r\n  modalInitialValues\r\n}) => {\r\n  const [formItems, setFormItems] = useState<IFormItem[]>([]);\r\n  const [initialValues, setInitialValues] = useState<TData>({});\r\n  const [metadata, setMetadata] = useState<TData[] | null>(null);\r\n  const [dictionary, setDictionary] = useState<TDictionary | null>(null);\r\n\r\n  const { metadata: modalTableMetadata, dictionary: modalTableDictionary } = useGetMetaDictionary(modalTablename);\r\n  const { data: contextMetadata } = useMetadataSelector();\r\n  const { dictionary: contextDictionary } = useDictionaryContext();\r\n\r\n  useEffect(() => {\r\n    if (modalTableMetadata && modalTableDictionary) {\r\n      setMetadata(modalTableMetadata);\r\n      setDictionary(modalTableDictionary);\r\n    } else if (contextMetadata && contextDictionary) {\r\n      setMetadata(contextMetadata);\r\n      setDictionary(contextDictionary);\r\n    }\r\n  }, [\r\n    modalTableMetadata,\r\n    modalTableDictionary,\r\n    contextMetadata,\r\n    contextDictionary\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (formItems && metadata && dictionary) {\r\n      const defaultData: TData = Object.fromEntries(metadata\r\n        .filter(({id}) => id !== 'specificValue')\r\n        .map((d) => [d.id, d.defaultValue]))\r\n      const initialData = modalInitialValues ? modalInitialValues : defaultData;\r\n\r\n      setInitialValues(convertDataItem(dictionary, initialData, metadata, 'modalAdd'));\r\n    }\r\n  }, [metadata, formItems, modalInitialValues, dictionary]);\r\n\r\n  useEffect(() => {\r\n    if (metadata) {\r\n      setFormItems(metadata\r\n        .filter((m) => m.id !== 'specificParameters')\r\n        .sort((a, b) => a.tableIndex - b.tableIndex)\r\n        .map((m) => {\r\n          return {\r\n            label: m.title,\r\n            name: m.id,\r\n            type: m.type,\r\n            rules: m.addMenuIndex ? [{ required: true, message: 'Поле должно быть корректно заполнено!' }] : [],\r\n            disabled: m.id === 'id',\r\n          }\r\n      }));\r\n    }\r\n  }, [ metadata ]);\r\n\r\n  return (\r\n    metadata ? (\r\n      <ModalWithForm\r\n        title={getTableParameters(metadata).addMenuTitle || 'Добавить'}\r\n        okButtonTitle='Добавить'\r\n        isOpen={isOpen}\r\n        handleOk={onAddHandler}\r\n        handleClose={onClose}\r\n        formItems={formItems}\r\n        initialValues={initialValues}\r\n        additionalButtons={[]}\r\n        modalDictionary={dictionary}\r\n      />\r\n    ) : null\r\n  );\r\n};\r\n\r\nexport default DataAddModal;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-component\":\"LoadingComponent_loading-component__21HvC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Content_content__3JB43\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"App_main__3Q8P-\"};","export const modes = [\r\n  { id: 'task', value: 'Задачи', realData: true },\r\n  { id: 'discussion', value: 'Совещания', realData: true },\r\n  { id: 'calendar', value: 'Календарь', realData: true },\r\n  { id: 'event', value: 'Изменения', realData: true },\r\n];\r\n\r\nexport const mainModes = modes.filter((e) => e.realData).map((e) => e.id);\r\n\r\nexport const DATE_FORMAT_FULLDATE = 'DD MMMM YYYY, dddd';\r\nexport const DATE_FORMAT_DATE = 'YYYY-MM-DD';\r\nexport const DATE_FORMAT_TIME = 'HH:mm';\r\n\r\nexport const urlApi = '/smisplan-typescript/cgi';\r\nexport const TEST = true;\r\n","import React, { useState } from \"react\";\r\nimport TUser from \"../types/TUser\";\r\n\r\ninterface IUserContextProvider {\r\n  user: TUser | undefined;\r\n  setUser: (user: TUser) => void;\r\n}\r\n\r\nexport const UserContext = React.createContext<IUserContextProvider>({} as IUserContextProvider);\r\n\r\nexport const UserContextProvider: React.FC = ({children}) => {\r\n  const [user, setUser] = useState<TUser>({\r\n    email: \"puhskin@yandex.ru\",\r\n    name: \"Пушкин\",\r\n    login: \"pushkin\"\r\n  });\r\n\r\n  return (\r\n    <UserContext.Provider value={{ user, setUser }}>\r\n      {children}\r\n    </UserContext.Provider>\r\n  )\r\n}\r\n","import { Reducer } from 'redux';\r\nimport { TApiReducerData } from '../../types/TApiReducer';\r\nimport { IFetchError } from '../../types/IFetchError';\r\nimport { TReduxData } from '../../types/TReduxData';\r\nimport Notification from '../../components/UI/Notification';\r\n\r\nconst initialState: TReduxData = {\r\n  isLoading: false,\r\n  data: null,\r\n  isError: false,\r\n};\r\n\r\nconst metadataReducer: Reducer = (state = initialState, action: TApiReducerData) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case 'METADATA_REQUEST_LOADING':\r\n      return metadataReducerLoading();;\r\n\r\n    case 'METADATA_REQUEST_RESPONSE':\r\n      return metadataReducerResponse(payload);\r\n\r\n    case 'METADATA_REQUEST_ERROR':\r\n      return metadataReducerError(payload);;\r\n\r\n    default:\r\n      return {...state};\r\n  }\r\n};\r\n\r\nconst metadataReducerLoading: () => TReduxData = () => {\r\n  return {\r\n    isLoading: true,\r\n    isError: false,\r\n    data: null\r\n  }\r\n};\r\n\r\nconst metadataReducerError: (error: IFetchError) => TReduxData = (error) => {\r\n  Notification({\r\n    type: 'error',\r\n    message: 'Ошибка при загрузке данных',\r\n    description: error.message ? error.message : error.statusText,\r\n  });\r\n\r\n  return {\r\n    isLoading: false,\r\n    isError: true,\r\n    data: null\r\n  }\r\n};\r\n\r\nconst metadataReducerResponse: (sourceData: any) => TReduxData = (sourceData) => {\r\n  return {\r\n    isLoading: false,\r\n    data: sourceData,\r\n    isError: false\r\n  }\r\n}\r\n\r\nexport default metadataReducer;\r\n","import {THtmlMethod} from '../types/THtmlMethod';\r\nimport { TReduxData } from \"../types/TReduxData\";\r\nimport { TData } from \"../types/TData\";\r\n\r\nexport const crudReduxDataUpdater:\r\n  (method: THtmlMethod, stateData: TReduxData[\"data\"], data: TData | TData[] | null) => TReduxData[\"data\"] =\r\n  (method, stateData, data) => {\r\n    switch (method) {\r\n      case \"POST\":\r\n      case \"PUT\":\r\n        return stateData && data\r\n          ? [ ...stateData, data]\r\n          : []\r\n\r\n      case \"PATCH\":\r\n        return stateData && data\r\n          ? [ ...stateData.map((d) => d.id === (data as TData).id ? data : d) ]\r\n          : []\r\n\r\n      case \"DELETE\":\r\n        return stateData && data\r\n          ? stateData.filter(({id}) => id !== (data as TData).id)\r\n          : []\r\n\r\n      default:\r\n        return data\r\n          ? [...(data as TData[])]\r\n          : []\r\n    }\r\n  };\r\n","import { Reducer } from 'redux';\r\nimport { TApiReducerData } from '../../types/TApiReducer';\r\nimport { IFetchError } from '../../types/IFetchError';\r\nimport { TReduxData } from '../../types/TReduxData';\r\nimport { THtmlMethod } from \"../../types/THtmlMethod\";\r\nimport { crudReduxDataUpdater } from \"../../utils/crudReduxUpdater\";\r\nimport Notification from '../../components/UI/Notification';\r\n\r\nconst initialState: TReduxData = {\r\n  isLoading: false,\r\n  data: null,\r\n  isError: false,\r\n};\r\n\r\nconst dataReducer: Reducer = (state = initialState, action: TApiReducerData) => {\r\n  const { type, payload, method } = action;\r\n\r\n  console.log({ type, payload, method })\r\n\r\n  switch (type) {\r\n    case 'DATA_REQUEST_LOADING':\r\n      return dataReducerLoading(state);\r\n\r\n    case 'DATA_REQUEST_RESPONSE':\r\n      return dataReducerResponse(method as THtmlMethod, state, payload);\r\n\r\n    case 'DATA_REQUEST_ERROR':\r\n      return dataReducerError(state, payload);\r\n\r\n    default:\r\n      return {...state};\r\n  }\r\n};\r\n\r\nconst dataReducerLoading: (state: TReduxData) => TReduxData = (state) => {\r\n  return {\r\n    isLoading: true,\r\n    isError: false,\r\n    data: state.data,\r\n    // data: null,\r\n  }\r\n};\r\n\r\nconst dataReducerError:\r\n  (state: TReduxData, error: IFetchError) => TReduxData =\r\n  (state, error) => {\r\n    Notification({\r\n    type: 'error',\r\n    message: 'Ошибка при загрузке данных',\r\n    description: error.message ? error.message : error.statusText,\r\n  });\r\n\r\n  return {\r\n    isLoading: false,\r\n    isError: true,\r\n    data: state.data,\r\n  }\r\n};\r\n\r\nconst dataReducerResponse:\r\n  (method: THtmlMethod, state: TReduxData, payload: any) => TReduxData =\r\n  (method, state, payload) => {\r\n  return {\r\n    isLoading: false,\r\n    data: crudReduxDataUpdater(method, state.data, payload),\r\n    isError: false\r\n  }\r\n}\r\n\r\nexport default dataReducer;\r\n","import { combineReducers } from \"redux\"\r\nimport metadataReducer from \"./metadata\";\r\nimport dataReducer from \"./data\";\r\n\r\nconst reducers = combineReducers({\r\n  dataReducer,\r\n  metadataReducer\r\n})\r\n\r\nexport default reducers;","import { applyMiddleware, createStore } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { Provider } from \"react-redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { apiMiddleware } from \"./middleware/apiMiddleware\";\r\nimport reducers from \"./reducers\";\r\n\r\nexport const storage = createStore(reducers, composeWithDevTools(applyMiddleware(thunk, apiMiddleware)));\r\n\r\nexport const StorageProvider: React.FC = ({ children }) => {\r\n  return (\r\n    <Provider store={storage}>\r\n      {children}\r\n    </Provider>\r\n  );\r\n}\r\n","import { useContext } from 'react';\r\nimport { Menu } from 'antd';\r\nimport { UserOutlined, LogoutOutlined } from '@ant-design/icons';\r\nimport { modes } from '../../constants/constants';\r\nimport { UserContext } from '../../context/UserContext';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useGetTablename } from '../../utils/hooks/useGetTablename';\r\nimport classes from './Header.module.scss';\r\n\r\nconst Header: React.FC = () => {\r\n  const mode = useGetTablename();\r\n  const userContext = useContext(UserContext);\r\n\r\n  return (\r\n    <header className={classes.header}>\r\n      <nav className={classes.navigation}>\r\n        <Menu\r\n          selectedKeys={[mode]}\r\n          mode='horizontal'\r\n          theme='dark'\r\n        >\r\n          {\r\n            modes.map((mode) => (\r\n              <Menu.Item key={mode.id}>\r\n                <NavLink to={`/${mode.id}`}>{mode.value}</NavLink>\r\n              </Menu.Item>\r\n            ))\r\n          }\r\n        </Menu>\r\n      </nav>\r\n\r\n      <Menu\r\n        mode='horizontal'\r\n        theme='dark'\r\n        className={classes['header-login']}\r\n      >\r\n        <Menu.SubMenu\r\n          icon={<UserOutlined />}\r\n          title={userContext.user?.name}\r\n          key='user-options'\r\n        >\r\n          <Menu.Item\r\n            key='logout'\r\n            className={classes.logout}\r\n            icon={<LogoutOutlined />}\r\n          >\r\n            Выход\r\n          </Menu.Item>\r\n        </Menu.SubMenu>\r\n      </Menu>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n// import { TableRow, TableCell } from '@material-ui/core';\r\nimport LoadingComponent from '../LoadingComponent';\r\n\r\ntype TSuspenseFallback = {\r\n  type: 'loading' | 'textNode';\r\n};\r\n\r\nconst Index: React.FC<TSuspenseFallback> = ({ type }) => {\r\n  return (\r\n    <>\r\n      {type === 'loading' && <LoadingComponent />}\r\n      {type === 'textNode' && <p>...</p>}\r\n      {/* {type === 'row' && (\r\n        <TableRow>\r\n          <TableCell>...</TableCell>\r\n        </TableRow>\r\n      )} */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(Index);\r\n","import { useReactToPrint } from 'react-to-print';\r\nimport { Tooltip } from 'antd';\r\nimport { PrinterOutlined } from '@ant-design/icons';\r\nimport { TPrintMode, usePrintPDFContext } from '../../../context/PrintPDFContext';\r\nimport { useCallback, useEffect, useMemo } from 'react';\r\nimport { useModalWithSelect } from '../ModalWithSelect';\r\n\r\nexport const PrintPDF: React.FC = () => {\r\n  const { dataPrintRef, setDataPrintMode, dataPrintMode } = usePrintPDFContext();\r\n\r\n  const handleOpen = () => toggleOpen(true);\r\n\r\n  const print = useReactToPrint({\r\n    // content: () => dataPrintRef ? dataPrintRef.current : null,\r\n    content: () => (\r\n      dataPrintRef\r\n        ? document.getElementsByClassName('ant-table-container')[0]\r\n        : null\r\n    ),\r\n    onAfterPrint: () => {\r\n      setDataPrintMode(undefined)\r\n      toggleOpen(false);\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (['print', 'current'].includes(dataPrintMode as string)) print();\r\n  }, [print, dataPrintMode]);\r\n\r\n  const handlePrint = useCallback((mode: TPrintMode) => {\r\n    setDataPrintMode(mode);\r\n  }, [setDataPrintMode]);\r\n\r\n  const listOptions = useMemo(() => [\r\n    {\r\n      optionTitle: 'Текущая страница',\r\n      optionValue: 'current',\r\n    },\r\n    {\r\n      optionTitle: 'Все страницы',\r\n      optionValue: 'all',\r\n    }\r\n  ], []);\r\n\r\n  const modalTitle = 'Распечатать все страницы или текущую?';\r\n  const {toggleOpen, ModalPrintSelect} = useModalWithSelect(modalTitle, listOptions, handlePrint);\r\n\r\n  return (\r\n    <Tooltip\r\n      placement='bottomLeft'\r\n      title='Печать в PDF'\r\n      className='tooltip'\r\n    >\r\n      {ModalPrintSelect}\r\n\r\n      <PrinterOutlined onClick={handleOpen} style={{ fontSize: '30px' }}/>\r\n    </Tooltip>\r\n  )\r\n}\r\n","import { useCallback, useMemo, useState } from 'react';\r\nimport { Modal, Radio, RadioChangeEvent, Space } from 'antd';\r\nimport { TPrintMode } from '../../../context/PrintPDFContext';\r\n\r\ntype TUseModalWithSelect = (\r\n  title: string,\r\n  list: {\r\n    optionTitle: string,\r\n    optionValue: string,\r\n  }[],\r\n  onSubmit: (value: TPrintMode) => void,\r\n) => {\r\n  toggleOpen: (mode: boolean) => void,\r\n  ModalPrintSelect: JSX.Element,\r\n  value: string | number | boolean | undefined\r\n};\r\n\r\nexport const useModalWithSelect: TUseModalWithSelect = (title, list, onSubmit) => {\r\n  const [value, setValue] = useState<TPrintMode>();\r\n  const [isOpen, setIsOpen] = useState<boolean>(false);\r\n\r\n  const handleToggle = useCallback((mode: boolean) => setIsOpen(mode), [])\r\n\r\n  const handleChange = (e: RadioChangeEvent) => setValue(e.target.value);\r\n  const handleSubmit = useCallback(() => onSubmit(value), [onSubmit, value]);\r\n  const handleClose = useCallback(() => () => handleToggle(false), [handleToggle]);\r\n\r\n  const ModalPrintSelect = useMemo(() => (\r\n    <Modal\r\n      title={title}\r\n      onOk={handleSubmit}\r\n      onCancel={handleClose}\r\n      visible={isOpen}\r\n      okButtonProps={{ disabled: !value }}\r\n    >\r\n      <Radio.Group onChange={handleChange} value={value}>\r\n        <Space direction=\"vertical\">\r\n          {\r\n            list.map(({optionTitle, optionValue}) => (\r\n              <Radio key={optionValue} value={optionValue}>{optionTitle}</Radio>\r\n            ))\r\n          }\r\n        </Space>\r\n      </Radio.Group>\r\n    </Modal>\r\n  ), [title, list, value, isOpen, handleClose, handleSubmit]);\r\n\r\n  return {\r\n    toggleOpen: handleToggle,\r\n    ModalPrintSelect,\r\n    value\r\n  };\r\n}\r\n","import React, { memo, useEffect, useState } from 'react';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Menu, Tooltip } from 'antd';\r\nimport {\r\n  SettingOutlined,\r\n  PlusCircleTwoTone,\r\n} from '@ant-design/icons';\r\nimport DataAddModal from '../Modals/DataAddModal';\r\nimport {dataAddAction} from \"../../storages/actions/data\";\r\nimport { useGetTablename } from \"../../utils/hooks/useGetTablename\";\r\nimport { useDataSelector } from \"../../storages/selectors/data\";\r\nimport { PrintPDF } from '../UI/PrintPDF';\r\nimport classes from './Sidebar.module.scss';\r\n\r\nconst Sidebar: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const [sidebarAction, setSidebarAction] = useState<string>('');\r\n\r\n  const tablename = useGetTablename();\r\n\r\n  const {isError: isErrorData, isLoading: isLoadingData} = useDataSelector();\r\n\r\n  const handleAddData = () => setSidebarAction('addData');\r\n\r\n  const handleCloseModal = () => setSidebarAction('');\r\n\r\n  useEffect(() => {\r\n    if (!isErrorData && !isLoadingData) handleCloseModal();\r\n  }, [isErrorData, isLoadingData])\r\n\r\n  return (\r\n    <Menu\r\n      mode='vertical'\r\n      theme='dark'\r\n      className={classes.sidebar}\r\n      selectedKeys={[sidebarAction]}\r\n    >\r\n      <DataAddModal\r\n        isOpen={sidebarAction === 'addData'}\r\n        onAddHandler={(data) => {\r\n          dispatch(dataAddAction(tablename, data));\r\n        }}\r\n        onClose={handleCloseModal}\r\n      />\r\n\r\n      <Menu.Item key='addData' className={classes['sidebar__menu-item']}>\r\n        <Tooltip placement='bottomLeft' title='Добавить' className='tooltip'>\r\n          <PlusCircleTwoTone\r\n            className={classes['sidebar__add-icon']}\r\n            style={{ fontSize: '30px' }}\r\n            twoToneColor='#52c41a'\r\n            onClick={handleAddData}\r\n          />\r\n        </Tooltip>\r\n      </Menu.Item>\r\n\r\n      <Menu.Item key='printPDF' className={classes['sidebar__menu-item']}>\r\n        <PrintPDF />\r\n      </Menu.Item>\r\n\r\n      <Menu.SubMenu key='settings'\r\n        className={classes['sidebar__menu-submenu']}\r\n        icon={<SettingOutlined style={{ fontSize: '30px' }} />}\r\n      >\r\n        <Menu.Item key='color-scheme'>Цветовая тема</Menu.Item>\r\n        <Menu.Item key='manual'>Инструкция</Menu.Item>\r\n      </Menu.SubMenu>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default memo(Sidebar);\r\n","import { Suspense, lazy, useEffect } from 'react';\r\nimport { Routes, Route, useLocation, useNavigate } from 'react-router-dom';\r\nimport SuspenseFallback from '../UI/SuspenseFallback';\r\nimport Sidebar from '../Sidebar';\r\nimport classes from './Content.module.scss';\r\n\r\nconst DataTable = lazy(() => import('../DataTable'));\r\nconst DataCalendar = lazy(() => import('../DataCalendar'));\r\n\r\nconst Content: React.FC = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (location.pathname === '/') navigate('/task');\r\n  }, [location, navigate]);\r\n\r\n  return (\r\n    <main className={classes.content}>\r\n      <Sidebar />\r\n      <Routes >\r\n        <Route path=\"calendar\"\r\n          element={\r\n            <Suspense fallback={<SuspenseFallback type=\"loading\" />}>\r\n              <DataCalendar mode='discussion'/>\r\n            </Suspense>\r\n          }\r\n        />\r\n\r\n        <Route path=\"*\"\r\n          element={\r\n            <Suspense fallback={<SuspenseFallback type=\"loading\" />}>\r\n              <DataTable />\r\n            </Suspense>\r\n          }\r\n        />\r\n      </Routes >\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Content;\r\n","export const dataCounterFactory = (data, mode) => {\r\n  const START_COUNT = {\r\n    task: data.task.length,\r\n    discussion: data.discussion.length,\r\n  }\r\n  let counter = START_COUNT[mode];\r\n\r\n  const increase = () => ++counter;\r\n\r\n  return increase;\r\n}\r\n","import axios from 'axios';\r\nimport MockAdapter from 'axios-mock-adapter';\r\nimport { urlApi } from '../../constants/constants';\r\nimport { dataCounterFactory } from './utils';\r\n\r\nconst user = require('../../constants/dummyData/user.json');\r\nconst developers = require('../../constants/dummyData/developers.json');\r\nconst projects = require('../../constants/dummyData/projects.json');\r\n\r\nconst metaData = {\r\n  task: null,\r\n  discussion: null,\r\n  calendar: null,\r\n  event: null,\r\n};\r\n\r\nmetaData.task = require('../../constants/dummyData/task_meta.json');\r\nmetaData.discussion = require('../../constants/dummyData/discussion_meta.json');\r\nmetaData.calendar = require('../../constants/dummyData/calendar_meta.json');\r\nmetaData.event = require('../../constants/dummyData/event_meta.json');\r\n\r\nconst data = {\r\n  task: null,\r\n  discussion: null,\r\n  calendar: null,\r\n  event: null,\r\n};\r\n\r\ndata.task = require('../../constants/dummyData/task.json');\r\ndata.discussion = require('../../constants/dummyData/discussion.json');\r\ndata.calendar = require('../../constants/dummyData/calendar.json');\r\ndata.event = require('../../constants/dummyData/event.json');\r\n\r\nconst mock = new MockAdapter(axios, { delayResponse: 100 });\r\n\r\nconst dataCount = {\r\n  task: dataCounterFactory(data, \"task\"),\r\n  discussion: dataCounterFactory(data, \"discussion\"),\r\n};\r\n\r\nconst replyPostWithOK = (mode) => (mockResponseConfig) => {\r\n  const body = JSON.parse(mockResponseConfig.data);\r\n  return [200, { id: dataCount[mode](), ...body}]\r\n}\r\n\r\nexport default function setMockAdapter() {\r\n  // get basic information\r\n  mock.onGet(`${urlApi}/user/`).reply(200, user);\r\n  mock.onGet(`${urlApi}/developer/`).reply(200, developers);\r\n  mock.onGet(`${urlApi}/project/`).reply(200, projects);\r\n\r\n  // get meta data information\r\n  mock.onGet(`${urlApi}/task-meta/`).reply(200, metaData.task);\r\n  mock.onGet(`${urlApi}/discussion-meta/`).reply(200, metaData.discussion);\r\n  mock.onGet(`${urlApi}/calendar-meta/`).reply(200, metaData.calendar);\r\n  mock.onGet(`${urlApi}/event-meta/`).reply(200, metaData.event);\r\n\r\n  // get data\r\n  mock.onGet(`${urlApi}/task/`).reply(200, data.task);\r\n  mock.onGet(`${urlApi}/discussion/`).reply(200, data.discussion);\r\n  mock.onGet(`${urlApi}/calendar/`).reply(200, data.calendar);\r\n  mock.onGet(`${urlApi}/event/`).reply(200, data.event);\r\n\r\n  // get data: specific\r\n  const pathGetTaskDiscussions = new RegExp(`${urlApi}/task/get-discussion/.+`);\r\n  mock.onGet(pathGetTaskDiscussions).reply((mockRequestConfig) => {\r\n    const urlArray = mockRequestConfig.url.split('/');\r\n    const connectedTable = urlArray[urlArray.length - 3];\r\n    const table = urlArray[urlArray.length - 2].split('-')[1];\r\n    const id = urlArray[urlArray.length - 1];\r\n\r\n    const connectedData = data[table]\r\n      .filter((d) => d.mainTable === connectedTable)\r\n      .filter((d) => d.status === 'done')\r\n      .filter((d) => +d.idTask === +id)\r\n      .map((d) => {\r\n        return {\r\n          title: `${d.date} ${d.time}`,\r\n          description: `${d.theme}\\n${d.result}`\r\n        };\r\n      })\r\n\r\n    return [200, connectedData]\r\n  });\r\n\r\n  // put data\r\n  // mock.onPut(`${urlApi}/task/`).reply(404);\r\n  mock.onPut(`${urlApi}/task/`).reply(replyPostWithOK(\"task\"));\r\n  mock.onPut(`${urlApi}/discussion/`).reply(replyPostWithOK(\"discussion\"));\r\n\r\n  // patch data\r\n  mock.onPatch(`${urlApi}/task/`).reply(replyPostWithOK(\"task\"));\r\n  mock.onPatch(`${urlApi}/discussion/`).reply(replyPostWithOK(\"discussion\"));\r\n\r\n  // delete data\r\n  mock.onDelete(`${urlApi}/task/`).reply(replyPostWithOK(\"task\"));\r\n  mock.onDelete(`${urlApi}/discussion/`).reply(replyPostWithOK(\"discussion\"));\r\n\r\n  // post data\r\n  mock.onPost(`${urlApi}/task/`).reply(200, { status: 'OK', error: '' });\r\n  mock.onPost(`${urlApi}/discussion/`).reply(200, { status: 'OK', error: '' });\r\n}\r\n\r\nexport const removeMockAdapter = () => mock.restore();\r\n","import React from \"react\";\nimport Header from \"./components/Header\";\nimport Content from \"./components/Content\";\nimport classes from './App.module.scss';\n\nimport setMockAdapter from './utils/apiMockAdapter';\nsetMockAdapter();\n\nconst App: React.FC = () => {\n  return (\n    <div className={classes.main}>\n      <Header />\n      <Content />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { UserContextProvider } from './context/UserContext';\nimport { StorageProvider } from './storages/storage';\nimport { DictionaryContextProvider } from './context/DictionaryContext';\nimport { PrintPDFContextProvider } from './context/PrintPDFContext';\nimport App from './App';\nimport './index.css';\nimport 'antd/dist/antd.css';\n\nconst basename: string = document.location.hostname === 'ilyasy.github.io'\n  ? '/smisplan-typescript/'\n  : '/';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={basename}>\n      <UserContextProvider>\n        <DictionaryContextProvider>\n          <StorageProvider>\n            <PrintPDFContextProvider>\n              <App />\n            </PrintPDFContextProvider>\n          </StorageProvider>\n        </DictionaryContextProvider>\n      </UserContextProvider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","import axios from \"axios\";\r\nimport React, { useCallback, useContext, useMemo, useState } from \"react\";\r\nimport { TDictionary } from \"../types/TDictionary\";\r\nimport { TDictionaryInfo } from \"../types/TDictionaryInfo\";\r\nimport { TObject } from \"../types/TObject\";\r\n\r\nexport type TGetDataUrl = { getDataUrl: string };\r\nexport type TMetadataDictionary = Record<string, TDictionaryInfo>[] | TGetDataUrl;\r\n\r\ninterface IDictionaryContext {\r\n  dictionary: TDictionary;\r\n  invertDictionary: TObject<Record<string, string>>;\r\n  setDictionary: (parameter: string, parameterDictionary: TMetadataDictionary) => void;\r\n};\r\n\r\nconst mapDictionaryArrayToObject = (array: Record<string, TDictionaryInfo>[]): TObject<TDictionaryInfo> => {\r\n  return Object.fromEntries(\r\n    array.map((value) => [value.value, {\r\n      text: value.text,\r\n      value: value.value,\r\n      tag: value?.tag\r\n    }])\r\n    // array.map((value) => [value.value, value.text])\r\n  )\r\n}\r\n\r\nconst DictionaryContext = React.createContext<IDictionaryContext>({} as IDictionaryContext);\r\n\r\nexport const useDictionaryContext = () => {\r\n  const context = useContext(DictionaryContext);\r\n  return context;\r\n}\r\n\r\nexport const DictionaryContextProvider: React.FC = ({children}) => {\r\n  const [dict, setDict] = useState<IDictionaryContext[\"dictionary\"]>({});\r\n\r\n  const dictionary = useMemo(() => dict, [dict]);\r\n  const invertDictionary = useMemo(() => {\r\n    return Object.fromEntries(\r\n      Object.entries(dict).map(([property, info]) => {\r\n        const inverseInfo = Object.fromEntries(Object.entries(info).map(([k, v]) => [v.text, k]))\r\n        return [property, inverseInfo]\r\n      })\r\n    );\r\n  }, [dict]);\r\n\r\n  const setDictionary = useCallback((\r\n    parameter: string,\r\n    parameterDictionary: TMetadataDictionary\r\n  ) => {\r\n    if ((parameterDictionary as TGetDataUrl).getDataUrl) {\r\n      const url = (parameterDictionary as TGetDataUrl).getDataUrl;\r\n\r\n      axios.get(url)\r\n        .then((response) => {\r\n          setDict((prev) => {\r\n            return {\r\n              ...prev,\r\n              [parameter]: mapDictionaryArrayToObject(response.data as Record<string, TDictionaryInfo>[])\r\n            }\r\n          });\r\n        })\r\n        .catch(console.log)\r\n    } else {\r\n      setDict((prev) => {\r\n        return {\r\n          ...prev,\r\n          [parameter]: mapDictionaryArrayToObject(parameterDictionary as Record<string, TDictionaryInfo>[])\r\n        }\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <DictionaryContext.Provider value={{\r\n      dictionary,\r\n      invertDictionary,\r\n      setDictionary\r\n    }}>\r\n      {children}\r\n    </DictionaryContext.Provider>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Sidebar_sidebar__2gC4b\",\"sidebar__menu-item\":\"Sidebar_sidebar__menu-item__1hyOG\",\"sidebar__menu-submenu\":\"Sidebar_sidebar__menu-submenu__27xks\",\"sidebar__add-icon\":\"Sidebar_sidebar__add-icon__1xUJM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3l_8K\",\"navigation\":\"Header_navigation__3dC_4\",\"logout\":\"Header_logout__2oRZS\",\"header-login\":\"Header_header-login__3woyD\"};","import moment from \"moment\";\r\nimport { invert } from \"lodash\";\r\nimport { TData } from \"../types/TData\"\r\nimport { TDictionary } from \"../types/TDictionary\"\r\n// import { TObject } from \"../types/TObject\";\r\n\r\ntype TConvertDataItem = (\r\n  dictionary: TDictionary,\r\n  // invertDictionary: TObject<Record<string, string>>,\r\n  data: TData,\r\n  metadata: TData[],\r\n  mode: 'form' | 'table' | 'modalEdit' | 'modalAdd',\r\n) => TData;\r\n\r\nexport const convertDataItem: TConvertDataItem = (dictionary, data, metadata, mode) => {\r\n  return Object.fromEntries(metadata\r\n    .filter((m) => m.id !== 'specificParameters')\r\n    .map((m) => {\r\n      const type = m.type;\r\n      const name = mode === 'form' ? m.name : m.id;\r\n      let invertDictionary: Record<string, string> = {};\r\n      if (dictionary[name]) {\r\n        invertDictionary = invert(\r\n          Object.fromEntries(Object.entries(dictionary[name]).map(([key, info]) => [key, info.text]))\r\n        );\r\n      }\r\n\r\n      if (data[name]) {\r\n        if (mode === 'form') {\r\n          switch (type) {\r\n            case 'date':\r\n              return [name, moment(data[name]).format('YYYY-MM-DD')];\r\n\r\n            case 'time':\r\n              return [name, moment(data[name]).format('HH:mm:ss')];\r\n\r\n            case 'datetime':\r\n              return [name, moment(data[name]).format('YYYY-MM-DD HH:mm:ss')];\r\n\r\n            case 'multi-select':\r\n              return [name, data[name].join(',')];\r\n          }\r\n        } else if (mode === 'table') {\r\n          switch (type) {\r\n            case 'select':\r\n            case 'multi-select':\r\n              return [\r\n                name,\r\n                data[name]?.split(', ')?.map((d: string) => invertDictionary[d])?.join(',')\r\n              ]\r\n          }\r\n        } else if (mode === 'modalEdit') {\r\n          switch (type) {\r\n            case 'date':\r\n            case 'datetime':\r\n              return [name, moment(new Date(data[name]))]\r\n\r\n            case 'time':\r\n              return [name, moment(new Date('1970-01-01 '+ data[name]))]\r\n\r\n            case 'select':\r\n              return [name, invertDictionary[data[name]]]\r\n\r\n            case 'multi-select':\r\n              return [\r\n                name,\r\n                data[name].split(/, ?/).map((d: string) => invertDictionary[d])\r\n              ]\r\n\r\n            case 'checkbox':\r\n              return [\r\n                name,\r\n                data[name] && data[name].toLowerCase() === 'да'\r\n              ]\r\n\r\n            default:\r\n              return [name, data[name]]\r\n          }\r\n        } else if (mode === 'modalAdd') {\r\n          switch (type) {\r\n            case 'date':\r\n            case 'datetime':\r\n            case 'time':\r\n              return [name, moment(new Date())]\r\n\r\n            case 'select':\r\n              return [name, data[name]]\r\n\r\n            case 'multi-select':\r\n              return [\r\n                name,\r\n                data[name].split(/, ?/)\r\n              ]\r\n\r\n            default:\r\n              return [name, data[name]]\r\n          }\r\n        }\r\n      } else {\r\n        return [name, undefined]\r\n      }\r\n\r\n      return [name, data[name]];\r\n    }))\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport const useGetTablename = () => {\r\n  const [ tablename, setTablename ] = useState<string>('task');\r\n\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    if (location.pathname) {\r\n      setTablename(location.pathname.replace(/\\/(.+?)(\\/|$)/, '$1'));\r\n    }\r\n  }, [location]);\r\n\r\n  return tablename\r\n}\r\n"],"sourceRoot":""}