{"version":3,"sources":["components/Header/Header.module.scss","utils/hooks/useGetTablename.ts","utils/convertDataItem.ts","context/PrintPDFContext.tsx","storages/middleware/apiMiddleware.ts","storages/selectors/metadata.ts","storages/actions/data.ts","utils/getTableParameters.ts","storages/actions/metadata.ts","storages/selectors/data.ts","components/UI/LoadingComponent/index.tsx","components/UI/ModalWithForm/index.tsx","utils/hooks/useGetMetaDictionary.ts","components/Modals/DataAddModal/index.tsx","components/UI/LoadingComponent/LoadingComponent.module.scss","components/Content/Content.module.scss","App.module.scss","constants/constants.ts","context/UserContext.tsx","utils/showNotification.ts","storages/reducers/metadata.ts","utils/crudReduxUpdater.ts","storages/reducers/data.ts","storages/reducers/index.ts","storages/storage.tsx","components/Header/index.tsx","components/UI/PrintPDF/index.tsx","components/UI/ModalWithSelect/index.tsx","components/Sidebar/Sidebar.tsx","components/UI/SuspenseFallback/index.tsx","components/Content/index.tsx","utils/apiMockAdapter/utils.js","utils/apiMockAdapter/index.js","App.tsx","index.tsx","context/DictionaryContext.tsx","components/Sidebar/Sidebar.module.scss"],"names":["module","exports","useGetTablename","useState","tablename","setTablename","location","useLocation","useEffect","pathname","replace","convertDataItem","dictionary","data","metadata","mode","Object","fromEntries","filter","m","id","map","type","name","invertDictionary","invert","undefined","moment","format","join","split","d","Date","PrintPDFContext","React","createContext","usePrintPDFContext","useContext","PrintPDFContextProvider","children","printMode","setPrintMode","dataRef","setDataRef","dataPrintRef","useMemo","setDataPrintRef","useCallback","refObject","dataPrintMode","setDataPrintMode","Provider","value","defaultHeaders","apiMiddleware","dispatch","action","a","method","url","body","headers","test","axios","request","JSON","stringify","response","console","log","payload","useMetadataSelector","useSelector","state","metadataReducer","dataGetAction","urlApi","dataDeleteAction","dataAddAction","dataUpdateAction","getTableParameters","find","c","metadataGetAction","useDataSelector","dataReducer","LoadingComponent","indicator","style","fontSize","spin","className","classes","memo","ModalWithForm","title","okButtonTitle","isOpen","handleOk","handleClose","formItems","additionalButtons","initialValues","modalDictionary","Form","useForm","form","contextDictionary","useDictionaryContext","setDictionary","onOk","callback","validateFields","then","values","catch","visible","onCancel","footer","danger","onClick","preserve","labelCol","span","wrapperCol","onFinish","onFinishFailed","formItem","Item","label","rules","disabled","TextArea","allowClear","filterOption","option","RegExp","showSearch","options","entries","showTime","mapDictionaryArrayToObject","array","text","DataAddModal","onAddHandler","onClose","modalTablename","modalInitialValues","setFormItems","setInitialValues","setMetadata","metadataAction","metadataResponse","includes","forEach","validValues","getDataUrl","get","dictionaryResponse","prev","useGetMetaDictionary","modalTableMetadata","modalTableDictionary","contextMetadata","defaultData","defaultValue","initialData","sort","b","tableIndex","addMenuIndex","required","message","addMenuTitle","modes","realData","DATE_FORMAT_FULLDATE","e","DATE_FORMAT_DATE","DATE_FORMAT_TIME","UserContext","UserContextProvider","email","login","user","setUser","showNotification","description","duration","notification","placement","initialState","isLoading","isError","metadataReducerLoading","metadataReducerError","error","statusText","metadataReducerResponse","sourceData","crudReduxDataUpdater","stateData","dataReducerLoading","dataReducerError","dataReducerResponse","reducers","combineReducers","storage","createStore","composeWithDevTools","applyMiddleware","thunk","StorageProvider","store","Header","userContext","header","navigation","selectedKeys","theme","inlineCollapsed","to","SubMenu","icon","UserOutlined","logout","LogoutOutlined","PrintPDF","print","useReactToPrint","content","document","getElementsByClassName","onAfterPrint","toggleOpen","handlePrint","list","onSubmit","setValue","setIsOpen","handleToggle","okButtonProps","Group","onChange","target","direction","optionTitle","optionValue","useModalWithSelect","ModalPrintSelect","PrinterOutlined","Sidebar","useDispatch","sidebarAction","setSidebarAction","isErrorData","isLoadingData","handleCloseModal","sidebar","PlusCircleTwoTone","twoToneColor","SettingOutlined","Index","DataTable","lazy","DataCalendar","Content","navigate","useNavigate","path","element","fallback","SuspenseFallback","dataCounterFactory","counter","task","length","discussion","require","developers","projects","metaData","calendar","event","mock","MockAdapter","delayResponse","dataCount","replyPostWithOK","mockResponseConfig","parse","onGet","reply","onPut","onPatch","onDelete","onPost","status","App","main","ReactDOM","render","StrictMode","DictionaryContext","getElementById","DictionaryContextProvider","dict","setDict","parameter","parameterDictionary"],"mappings":"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","file":"static/js/main.43178c2d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3l_8K\",\"navigation\":\"Header_navigation__3dC_4\",\"logout\":\"Header_logout__2oRZS\",\"header-login\":\"Header_header-login__3woyD\"};","import { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst useGetTablename = () => {\r\n  const [ tablename, setTablename ] = useState<string>('task');\r\n\r\n  const location = useLocation();\r\n  \r\n  useEffect(() => {\r\n    if (location.pathname) {\r\n      setTablename(location.pathname.replace(/\\/(.+?)(\\/|$)/, '$1'));\r\n    }\r\n  }, [location]);\r\n\r\n  return tablename\r\n}\r\n\r\nexport default useGetTablename;","import moment from \"moment\";\r\nimport { invert } from \"lodash\";\r\nimport { TData } from \"../types/TData\"\r\nimport { TDictionary } from \"../types/TDictionary\"\r\n\r\ntype TConvertDataItem = (\r\n  dictionary: TDictionary,\r\n  data: TData,\r\n  metadata: TData[],\r\n  mode: 'form' | 'table' | 'modalEdit' | 'modalAdd',\r\n) => TData;\r\n\r\nexport const convertDataItem: TConvertDataItem = (dictionary, data, metadata, mode) => {\r\n  return Object.fromEntries(metadata\r\n    .filter((m) => m.id !== 'specificParameters')\r\n    .map((m) => {\r\n      const type = m.type;\r\n      const name = mode === 'form' ? m.name : m.id;\r\n      const invertDictionary = invert(dictionary[name]);\r\n\r\n      if (data[name]) {\r\n        if (mode === 'form') {\r\n          switch (type) {\r\n            case 'date':\r\n              return [name, moment(data[name]).format('YYYY-MM-DD')];\r\n\r\n            case 'time':\r\n              return [name, moment(data[name]).format('HH:mm:ss')];\r\n\r\n            case 'datetime':\r\n              return [name, moment(data[name]).format('YYYY-MM-DD HH:mm:ss')];\r\n\r\n            case 'multi-select':\r\n              return [name, data[name].join(',')];\r\n          }\r\n        } else if (mode === 'table') {\r\n          switch (type) {\r\n            case 'select':\r\n            case 'multi-select':\r\n              return [\r\n                name,\r\n                data[name]?.split(', ')?.map((d: string) => invertDictionary[d])?.join(',')\r\n              ]\r\n          }\r\n        } else if (mode === 'modalEdit') {\r\n          switch (type) {\r\n            case 'date':\r\n            case 'datetime':\r\n              return [name, moment(new Date(data[name]))]\r\n\r\n            case 'time':\r\n              return [name, moment(new Date('1970-01-01 '+ data[name]))]\r\n\r\n            case 'select':\r\n              return [name, invertDictionary[data[name]]]\r\n\r\n            case 'multi-select':\r\n              return [\r\n                name,\r\n                data[name].split(/, ?/).map((d: string) => invertDictionary[d])\r\n              ]\r\n\r\n            default:\r\n              return [name, data[name]]\r\n          }\r\n        } else if (mode === 'modalAdd') {\r\n          switch (type) {\r\n            case 'date':\r\n            case 'datetime':\r\n            case 'time':\r\n              return [name, moment(new Date())]\r\n\r\n            case 'select':\r\n              return [name, data[name]]\r\n\r\n            case 'multi-select':\r\n              return [\r\n                name,\r\n                data[name].split(/, ?/)\r\n              ]\r\n\r\n            default:\r\n              return [name, data[name]]\r\n          }\r\n        }\r\n      } else {\r\n        return [name, undefined]\r\n      }\r\n\r\n      return [name, data[name]];\r\n    }))\r\n}\r\n","import React, { useCallback, useContext, useMemo, useState } from \"react\";\r\n\r\nexport type TPrintMode = 'print' | 'all' | 'current' | undefined;\r\n\r\ninterface IPrintPDFContext {\r\n  dataPrintMode: TPrintMode;\r\n  setDataPrintMode: (mode:TPrintMode) => void;\r\n  dataPrintRef: React.RefObject<HTMLDivElement> | undefined;\r\n  setDataPrintRef: (dataRef: React.RefObject<HTMLDivElement>) => void;\r\n}\r\n\r\nconst PrintPDFContext = React.createContext<IPrintPDFContext>({} as IPrintPDFContext);\r\n\r\nexport const usePrintPDFContext = () => {\r\n  const context = useContext(PrintPDFContext);\r\n  return context;\r\n}\r\n\r\nexport const PrintPDFContextProvider: React.FC = ({ children }) => {\r\n  const [printMode, setPrintMode] = useState<TPrintMode>();\r\n  const [dataRef, setDataRef] = useState<React.RefObject<HTMLDivElement>>();\r\n\r\n  const dataPrintRef = useMemo(() => dataRef, [dataRef]);\r\n  const setDataPrintRef = useCallback((refObject) => setDataRef(refObject), []);\r\n\r\n  const dataPrintMode = useMemo(() => printMode, [printMode]);\r\n  const setDataPrintMode = useCallback((mode: TPrintMode) => setPrintMode(mode), []);\r\n\r\n  return (\r\n    <PrintPDFContext.Provider value={{\r\n      dataPrintMode,\r\n      setDataPrintMode,\r\n      dataPrintRef,\r\n      setDataPrintRef,\r\n    }}>\r\n      {children}\r\n    </PrintPDFContext.Provider>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nimport { Middleware } from \"redux\";\r\n\r\nexport const defaultHeaders: HeadersInit = {\r\n  \"Content-type\": \"application/json\",\r\n};\r\n\r\nexport const apiMiddleware: Middleware =\r\n  () =>\r\n  (dispatch) =>\r\n  async (action: any) => {\r\n    const { type, method = \"GET\", url, body, headers = defaultHeaders } = action;\r\n    // console.log(action, type);\r\n\r\n    if (!/REQUEST/.test(type)) {\r\n      return dispatch(action);\r\n    }\r\n\r\n    dispatch({type: type + '_LOADING'});\r\n\r\n    try {\r\n      const response = await axios.request({\r\n        method,\r\n        url,\r\n        data: JSON.stringify(body),\r\n        headers,\r\n      });\r\n\r\n      console.log(JSON.stringify(body))\r\n\r\n      dispatch({type: type + '_RESPONSE', payload: response.data, method});\r\n    } catch (error) {\r\n      dispatch({type: type + '_ERROR', payload: error});\r\n    }\r\n  }\r\n","import { useSelector } from \"react-redux\";\r\nimport TReduxData from \"../../types/TReduxData\";\r\nimport metadataReducer from \"../reducers/data\";\r\n\r\nconst useMetadataSelector = () => {\r\n  const metadata: TReduxData = useSelector((state: ReturnType<typeof metadataReducer>) => state.metadataReducer);\r\n\r\n  return metadata;\r\n}\r\n\r\nexport default useMetadataSelector;","import { urlApi } from \"../../constants/constants\"\r\nimport TApiAction from \"../../types/TApiAction\"\r\nimport TApiActionBody from \"../../types/TApiActionBody\"\r\n\r\nconst type = 'DATA_REQUEST';\r\n\r\nexport const dataGetAction: (tablename: string) => TApiAction = (tablename) => {\r\n  return {\r\n    type,\r\n    url: `${urlApi}/${tablename}/`,\r\n    method: \"GET\"\r\n  }\r\n}\r\n\r\nexport const dataDeleteAction: \r\n  (tablename: string, body: TApiActionBody) => TApiAction = \r\n  (tablename, body) => {\r\n    return {\r\n      type,\r\n      url: `${urlApi}/${tablename}/`,\r\n      method: \"DELETE\",\r\n      body,\r\n    }\r\n}\r\n\r\nexport const dataAddAction: \r\n  (tablename: string, body: TApiActionBody) => TApiAction = \r\n  (tablename, body) => {\r\n    return {\r\n      type,\r\n      url: `${urlApi}/${tablename}/`,\r\n      method: \"PUT\",\r\n      body,\r\n    }\r\n}\r\n\r\nexport const dataUpdateAction: (tablename: string, body: TApiActionBody) => TApiAction = (tablename, body) => {\r\n  return {\r\n    type,\r\n    url: `${urlApi}/${tablename}/`,\r\n    method: \"PATCH\",\r\n    body,\r\n  }\r\n}","import { TTableParameters } from '../types/TTableParameters';\r\n\r\ntype TGetTableParameters = (\r\n  metadata: Record<string, any>[]\r\n) => TTableParameters\r\n\r\nconst getTableParameters: TGetTableParameters = (metadata) => {\r\n  return metadata.find((c) => c.id === 'specificParameters') as TTableParameters;\r\n}\r\n\r\nexport default getTableParameters;","import { urlApi } from \"../../constants/constants\";\r\nimport TApiAction from \"../../types/TApiAction\";\r\n\r\nconst metadataGetAction: (tablename: string) => TApiAction = (tablename) => {\r\n  return {\r\n    type: \"METADATA_REQUEST\",\r\n    url: `${urlApi}/${tablename}-meta/`,\r\n    method: \"GET\",\r\n  }\r\n}\r\n\r\nexport default metadataGetAction;","import { useSelector } from \"react-redux\";\r\nimport TReduxData from \"../../types/TReduxData\";\r\nimport dataReducer from \"../reducers/data\";\r\n\r\nconst useDataSelector = () => {\r\n  const data: TReduxData = useSelector((state: ReturnType<typeof dataReducer>) => state.dataReducer);\r\n\r\n  return data;\r\n}\r\n\r\nexport default useDataSelector;\r\n","import React from 'react';\r\nimport { Spin } from 'antd';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\nimport classes from './LoadingComponent.module.scss';\r\n\r\nconst LoadingComponent: React.FC = () => {\r\n  return (\r\n    <Spin\r\n      indicator={<LoadingOutlined style={{ fontSize: 240 }} spin />}\r\n      // style={{ width: '100%', height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center' }}\r\n      className={classes['loading-component']}\r\n    />\r\n  );\r\n};\r\n\r\nexport default React.memo(LoadingComponent);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Modal, Form, Input, Button, DatePicker, TimePicker, Select } from 'antd';\r\nimport useDictionaryContext from '../../../context/DictionaryContext';\r\nimport { IFormItem } from '../../../types/IFormItem';\r\nimport { IModalWithForm } from '../../../types/IModalWithForm';\r\nimport { convertDataItem } from '../../../utils/convertDataItem';\r\nimport { TDictionary } from \"../../../types/TDictionary\";\r\n\r\nconst ModalWithForm: React.FC<IModalWithForm> = ({\r\n  title,\r\n  okButtonTitle = 'Сохранить',\r\n  isOpen,\r\n  handleOk,\r\n  handleClose,\r\n  formItems,\r\n  additionalButtons,\r\n  initialValues,\r\n  modalDictionary\r\n}) => {\r\n  const [form] = Form.useForm();\r\n\r\n  const { dictionary: contextDictionary } = useDictionaryContext();\r\n  const [dictionary, setDictionary] = useState<TDictionary | null>(null);\r\n\r\n  useEffect(() => {\r\n    setDictionary(modalDictionary || contextDictionary);\r\n  }, [contextDictionary, modalDictionary])\r\n\r\n  const onOk =\r\n    (callback: (values: any) => void) =>\r\n    () => {\r\n      form\r\n        .validateFields()\r\n        .then((values) => {\r\n          if (dictionary) {\r\n            values = convertDataItem(dictionary, values, formItems, 'form');\r\n\r\n            callback(values);\r\n          }\r\n        })\r\n        .catch(console.log)\r\n    };\r\n\r\n  return (\r\n    isOpen ? (\r\n      <Modal\r\n        title={title}\r\n        visible={isOpen}\r\n        onOk={onOk(handleOk)}\r\n        onCancel={handleClose}\r\n        footer={[\r\n          <Button key='ModalWithForm-cancel-button' type=\"primary\" danger onClick={handleClose}>Отмена</Button>,\r\n\r\n          additionalButtons.map(({title, onClick}) => (\r\n            <Button\r\n              key={`ModalWithForm-${title}-button`}\r\n              onClick={onOk(onClick)}\r\n            >\r\n              {title}\r\n            </Button>\r\n          )),\r\n\r\n          <Button key='ModalWithForm-ok-button' type=\"primary\" onClick={onOk(handleOk)}>{okButtonTitle}</Button>,\r\n        ]}\r\n      >\r\n        <Form\r\n          name='basic'\r\n          preserve={false}\r\n          labelCol={{ span: 8 }}\r\n          wrapperCol={{ span: 16 }}\r\n          initialValues={initialValues ? initialValues : {}}\r\n          onFinish={console.log}\r\n          onFinishFailed={console.log}\r\n          form={form}\r\n        >\r\n          {\r\n            formItems.map((formItem: IFormItem) => (\r\n              <Form.Item\r\n                key={formItem.name}\r\n                label={formItem.label}\r\n                name={formItem.name}\r\n                rules={formItem.rules}\r\n              >\r\n                {\r\n                  (formItem.type === 'string' || formItem.type === 'number')\r\n                  ? (\r\n                    <Input\r\n                      disabled={formItem.disabled}\r\n                    />\r\n                  ) :\r\n                  formItem.type === 'fulltext'\r\n                  ? (\r\n                    <Input.TextArea\r\n                      disabled={formItem.disabled}\r\n                    />\r\n                  ) :\r\n                  (formItem.type === 'select' || formItem.type === 'multi-select')\r\n                  ? (\r\n                    <Select\r\n                      disabled={formItem.disabled}\r\n                      allowClear\r\n                      filterOption={(value: string, option) => RegExp(value, 'i').test(`${option?.label}`)}\r\n                      mode={formItem.type === 'multi-select' ? 'multiple' : undefined}\r\n                      showSearch\r\n                      // options={Object.entries(dictionary[formItem.name]).map(([value, label]) => (\r\n                      options={\r\n                        dictionary\r\n                          ? Object.entries(dictionary[formItem.name])\r\n                              .map(([value, label]) => (\r\n                                { value, label }\r\n                              ))\r\n                          : []\r\n                      }\r\n                    />\r\n                  ) :\r\n                  formItem.type === 'date' ? (\r\n                    <DatePicker\r\n                      format=\"YYYY-MM-DD\"\r\n                      disabled={formItem.disabled}\r\n                    />\r\n                  ) :\r\n                  formItem.type === 'datetime' ? (\r\n                    <DatePicker\r\n                      format=\"YYYY-MM-DD HH:mm:ss\"\r\n                      disabled={formItem.disabled}\r\n                      showTime\r\n                    />\r\n                  ) :\r\n                  formItem.type === 'time' ? (\r\n                    <TimePicker\r\n                      format=\"HH:mm:ss\"\r\n                      disabled={formItem.disabled}\r\n                    />\r\n                  ) : null\r\n                }\r\n              </Form.Item>\r\n            ))\r\n          }\r\n        </Form>\r\n      </Modal>\r\n    ) : null\r\n  );\r\n}\r\n\r\nexport default ModalWithForm;\r\n","import { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { modes } from \"../../constants/constants\"\r\nimport { TGetDataUrl, TMetadataDictionary } from \"../../context/DictionaryContext\";\r\nimport { TData } from \"../../types/TData\";\r\nimport { TDictionary } from \"../../types/TDictionary\";\r\nimport { TObject } from \"../../types/TObject\";\r\nimport { defaultHeaders } from \"../../storages/middleware/apiMiddleware\";\r\nimport metadataGetAction from \"../../storages/actions/metadata\";\r\n\r\nconst mapDictionaryArrayToObject = (array: Record<string, string>[]): TObject<string> => {\r\n  return Object.fromEntries(\r\n    array.map((value) => [value.value, value.text])\r\n  )\r\n}\r\n\r\nexport const useGetMetaDictionary = (tablename?: typeof modes[number]['id'] ) => {\r\n  const [metadata, setMetadata] = useState<TData[] | null>(null);\r\n  const [dictionary, setDictionary] = useState<TDictionary | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (tablename) {\r\n      const metadataAction = metadataGetAction(tablename);\r\n\r\n      axios.request({\r\n        method: metadataAction.method,\r\n        url: metadataAction.url,\r\n        headers: defaultHeaders as any,\r\n      })\r\n        .then((metadataResponse: any) => {\r\n          setMetadata(metadataResponse.data);\r\n\r\n          metadataResponse.data\r\n            .filter(({ type }: {type: string}) => ['select', 'multi-select'].includes(type))\r\n            .forEach(({ id, validValues }: {id: string, validValues: TMetadataDictionary}) => {\r\n              if ((validValues as TGetDataUrl).getDataUrl) {\r\n                axios.get((validValues as TGetDataUrl).getDataUrl)\r\n                  .then((dictionaryResponse) => {\r\n                    setDictionary((prev) => {\r\n                      return {\r\n                        ...prev,\r\n                        [id]: mapDictionaryArrayToObject(dictionaryResponse.data as Record<string, string>[])\r\n                      }\r\n                    });\r\n                  })\r\n                  .catch(console.log)\r\n              } else if (validValues) {\r\n                setDictionary((prev) => {\r\n                  return {\r\n                    ...prev,\r\n                    [id]: mapDictionaryArrayToObject(validValues as Record<string, string>[])\r\n                  }\r\n                });\r\n              }\r\n            })\r\n        })\r\n    }\r\n  }, [tablename]);\r\n\r\n  return { metadata, dictionary };\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport ModalWithForm from '../../UI/ModalWithForm';\r\nimport getTableParameters from '../../../utils/getTableParameters';\r\nimport { IFormItem } from '../../../types/IFormItem';\r\nimport { TData } from '../../../types/TData';\r\nimport { TDictionary } from '../../../types/TDictionary';\r\nimport { useGetMetaDictionary } from '../../../utils/hooks/useGetMetaDictionary';\r\nimport useMetadataSelector from '../../../storages/selectors/metadata';\r\nimport useDictionaryContext from '../../../context/DictionaryContext';\r\nimport { convertDataItem } from '../../../utils/convertDataItem';\r\n\r\ninterface IDataAddModal {\r\n  isOpen: boolean;\r\n  onAddHandler: (data: TData) => void;\r\n  onClose: () => void;\r\n  modalTablename?: string;\r\n  modalInitialValues?: TData;\r\n}\r\n\r\nconst DataAddModal: React.FC<IDataAddModal> = ({\r\n  isOpen,\r\n  onAddHandler,\r\n  onClose,\r\n  modalTablename,\r\n  modalInitialValues\r\n}) => {\r\n  const [formItems, setFormItems] = useState<IFormItem[]>([]);\r\n  const [initialValues, setInitialValues] = useState<TData>({});\r\n  const [metadata, setMetadata] = useState<TData[] | null>(null);\r\n  const [dictionary, setDictionary] = useState<TDictionary | null>(null);\r\n\r\n  const { metadata: modalTableMetadata, dictionary: modalTableDictionary } = useGetMetaDictionary(modalTablename);\r\n  const { data: contextMetadata } = useMetadataSelector();\r\n  const { dictionary: contextDictionary } = useDictionaryContext();\r\n\r\n  useEffect(() => {\r\n    if (modalTableMetadata && modalTableDictionary) {\r\n      setMetadata(modalTableMetadata);\r\n      setDictionary(modalTableDictionary);\r\n    } else if (contextMetadata && contextDictionary) {\r\n      setMetadata(contextMetadata);\r\n      setDictionary(contextDictionary);\r\n    }\r\n  }, [\r\n    modalTableMetadata,\r\n    modalTableDictionary,\r\n    contextMetadata,\r\n    contextDictionary\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (formItems && metadata && dictionary) {\r\n      const defaultData: TData = Object.fromEntries(metadata\r\n        .filter(({id}) => id !== 'specificValue')\r\n        .map((d) => [d.id, d.defaultValue]))\r\n      const initialData = modalInitialValues ? modalInitialValues : defaultData;\r\n\r\n      setInitialValues(convertDataItem(dictionary, initialData, metadata, 'modalAdd'));\r\n    }\r\n  }, [metadata, formItems, modalInitialValues, dictionary]);\r\n\r\n  useEffect(() => {\r\n    if (metadata) {\r\n      setFormItems(metadata\r\n        .filter((m) => m.id !== 'specificParameters')\r\n        .sort((a, b) => a.tableIndex - b.tableIndex)\r\n        .map((m) => {\r\n          return {\r\n            label: m.title,\r\n            name: m.id,\r\n            type: m.type,\r\n            rules: m.addMenuIndex ? [{ required: true, message: 'Поле должно быть корректно заполнено!' }] : [],\r\n            disabled: m.id === 'id',\r\n          }\r\n      }));\r\n    }\r\n  }, [ metadata ]);\r\n\r\n  return (\r\n    metadata ? (\r\n      <ModalWithForm\r\n        title={getTableParameters(metadata).addMenuTitle || 'Добавить'}\r\n        okButtonTitle='Добавить'\r\n        isOpen={isOpen}\r\n        handleOk={onAddHandler}\r\n        handleClose={onClose}\r\n        formItems={formItems}\r\n        initialValues={initialValues}\r\n        additionalButtons={[]}\r\n        modalDictionary={dictionary}\r\n      />\r\n    ) : null\r\n  );\r\n};\r\n\r\nexport default DataAddModal;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-component\":\"LoadingComponent_loading-component__21HvC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Content_content__3JB43\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"App_main__3Q8P-\"};","export const modes = [\r\n  { id: 'task', value: 'Задачи', realData: true },\r\n  { id: 'discussion', value: 'Совещания', realData: true },\r\n  { id: 'calendar', value: 'Календарь', realData: true },\r\n  { id: 'event', value: 'Изменения', realData: true },\r\n];\r\n\r\nexport const mainModes = modes.filter((e) => e.realData).map((e) => e.id);\r\n\r\nexport const DATE_FORMAT_FULLDATE = 'DD MMMM YYYY, dddd';\r\nexport const DATE_FORMAT_DATE = 'YYYY-MM-DD';\r\nexport const DATE_FORMAT_TIME = 'HH:mm';\r\n\r\nexport const urlApi = '/smisplan-typescript/cgi';\r\nexport const TEST = true;\r\n","import React, { useState } from \"react\";\r\nimport TUser from \"../types/TUser\";\r\n\r\ninterface IUserContextProvider {\r\n  user: TUser | undefined;\r\n  setUser: (user: TUser) => void;\r\n}\r\n\r\nexport const UserContext = React.createContext<IUserContextProvider>({} as IUserContextProvider);\r\n\r\nexport const UserContextProvider: React.FC = ({children}) => {\r\n  const [user, setUser] = useState<TUser>({\r\n    email: \"puhskin@yandex.ru\",\r\n    name: \"Пушкин\",\r\n    login: \"pushkin\"\r\n  });\r\n\r\n  return (\r\n    <UserContext.Provider value={{\r\n      user,\r\n      setUser,\r\n    }}>\r\n      {children}\r\n    </UserContext.Provider>\r\n  )\r\n}","import { notification } from 'antd';\r\nimport INotification from \"../types/INotification\"\r\n\r\nconst showNotification = (action: INotification) => {\r\n  const { type, message, description, duration = 5 } = action;\r\n  notification[type]({\r\n    message: message,\r\n    description: description,\r\n    placement: 'topRight',\r\n    duration: duration\r\n  });\r\n}\r\n\r\nexport default showNotification;","import { Reducer } from 'redux';\r\nimport TApiReducerData from '../../types/TApiReducer';\r\nimport IFetchError from '../../types/IFetchError';\r\nimport TReduxData from '../../types/TReduxData';\r\nimport showNotification from '../../utils/showNotification';\r\n\r\nconst initialState: TReduxData = {\r\n  isLoading: false,\r\n  data: null,\r\n  isError: false,\r\n};\r\n\r\nconst metadataReducer: Reducer = (state = initialState, action: TApiReducerData) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case 'METADATA_REQUEST_LOADING':\r\n      return metadataReducerLoading();;\r\n\r\n    case 'METADATA_REQUEST_RESPONSE':\r\n      return metadataReducerResponse(payload);\r\n\r\n    case 'METADATA_REQUEST_ERROR':\r\n      return metadataReducerError(payload);;\r\n      \r\n    default:\r\n      return {...state};\r\n  }\r\n};\r\n\r\nconst metadataReducerLoading: () => TReduxData = () => {\r\n  return {\r\n    isLoading: true,\r\n    isError: false,\r\n    data: null\r\n  }\r\n};\r\n\r\nconst metadataReducerError: (error: IFetchError) => TReduxData = (error) => {\r\n  showNotification({\r\n    type: 'error',\r\n    message: 'Ошибка при загрузке данных',\r\n    description: error.message ? error.message : error.statusText,\r\n  });\r\n\r\n  return {\r\n    isLoading: false,\r\n    isError: true,\r\n    data: null\r\n  }\r\n};\r\n\r\nconst metadataReducerResponse: (sourceData: any) => TReduxData = (sourceData) => {\r\n  return {\r\n    isLoading: false,\r\n    data: sourceData,\r\n    isError: false\r\n  }\r\n}\r\n\r\nexport default metadataReducer;\r\n","import {THtmlMethod} from '../types/THtmlMethod';\r\nimport TReduxData from \"../types/TReduxData\";\r\nimport { TData } from \"../types/TData\";\r\n\r\nexport const crudReduxDataUpdater:\r\n  (method: THtmlMethod, stateData: TReduxData[\"data\"], data: TData | TData[] | null) => TReduxData[\"data\"] =\r\n  (method, stateData, data) => {\r\n    switch (method) {\r\n      case \"POST\":\r\n      case \"PUT\":\r\n        return stateData && data\r\n          ? [ ...stateData, data]\r\n          : []\r\n\r\n      case \"PATCH\":\r\n        return stateData && data\r\n          ? [ ...stateData.map((d) => d.id === (data as TData).id ? data : d) ]\r\n          : []\r\n\r\n      case \"DELETE\":\r\n        return stateData && data\r\n          ? stateData.filter(({id}) => id !== (data as TData).id)\r\n          : []\r\n\r\n      default:\r\n        return data\r\n          ? [...(data as TData[])]\r\n          : []\r\n    }\r\n  };\r\n","import { Reducer } from 'redux';\r\nimport TApiReducerData from '../../types/TApiReducer';\r\nimport IFetchError from '../../types/IFetchError';\r\nimport TReduxData from '../../types/TReduxData';\r\nimport showNotification from '../../utils/showNotification';\r\nimport { crudReduxDataUpdater } from \"../../utils/crudReduxUpdater\";\r\nimport { THtmlMethod } from \"../../types/THtmlMethod\";\r\n\r\nconst initialState: TReduxData = {\r\n  isLoading: false,\r\n  data: null,\r\n  isError: false,\r\n};\r\n\r\nconst dataReducer: Reducer = (state = initialState, action: TApiReducerData) => {\r\n  const { type, payload, method } = action;\r\n\r\n  console.log({ type, payload, method })\r\n\r\n  switch (type) {\r\n    case 'DATA_REQUEST_LOADING':\r\n      return dataReducerLoading(state);\r\n\r\n    case 'DATA_REQUEST_RESPONSE':\r\n      return dataReducerResponse(method as THtmlMethod, state, payload);\r\n\r\n    case 'DATA_REQUEST_ERROR':\r\n      return dataReducerError(state, payload);\r\n\r\n    default:\r\n      return {...state};\r\n  }\r\n};\r\n\r\nconst dataReducerLoading: (state: TReduxData) => TReduxData = (state) => {\r\n  return {\r\n    isLoading: true,\r\n    isError: false,\r\n    data: state.data,\r\n    // data: null,\r\n  }\r\n};\r\n\r\nconst dataReducerError:\r\n  (state: TReduxData, error: IFetchError) => TReduxData =\r\n  (state, error) => {\r\n  showNotification({\r\n    type: 'error',\r\n    message: 'Ошибка при загрузке данных',\r\n    description: error.message ? error.message : error.statusText,\r\n  });\r\n\r\n  return {\r\n    isLoading: false,\r\n    isError: true,\r\n    data: state.data,\r\n  }\r\n};\r\n\r\nconst dataReducerResponse:\r\n  (method: THtmlMethod, state: TReduxData, payload: any) => TReduxData =\r\n  (method, state, payload) => {\r\n  return {\r\n    isLoading: false,\r\n    data: crudReduxDataUpdater(method, state.data, payload),\r\n    isError: false\r\n  }\r\n}\r\n\r\nexport default dataReducer;\r\n","import { combineReducers } from \"redux\"\r\nimport metadataReducer from \"./metadata\";\r\nimport dataReducer from \"./data\";\r\n\r\nconst reducers = combineReducers({\r\n  dataReducer,\r\n  metadataReducer\r\n})\r\n\r\nexport default reducers;","import { applyMiddleware, createStore } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { Provider } from \"react-redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { apiMiddleware } from \"./middleware/apiMiddleware\";\r\nimport reducers from \"./reducers\";\r\n\r\nexport const storage = createStore(reducers, composeWithDevTools(applyMiddleware(thunk, apiMiddleware)));\r\n\r\nexport const StorageProvider: React.FC = ({ children }) => {\r\n  return (\r\n    <Provider store={storage}>\r\n      {children}\r\n    </Provider>\r\n  );\r\n}","import { useContext } from 'react';\r\nimport { Menu } from 'antd';\r\nimport { UserOutlined, LogoutOutlined } from '@ant-design/icons';\r\nimport { modes } from '../../constants/constants';\r\nimport { UserContext } from '../../context/UserContext';\r\nimport classes from './Header.module.scss';\r\nimport { NavLink } from 'react-router-dom';\r\nimport useGetTablename from '../../utils/hooks/useGetTablename';\r\n\r\nconst Header: React.FC = () => {\r\n  const mode = useGetTablename()\r\n  const userContext = useContext(UserContext);\r\n\r\n  return (\r\n    <header className={classes.header}>\r\n      <nav className={classes.navigation}>\r\n        <Menu\r\n          selectedKeys={[mode]}\r\n          mode='horizontal'\r\n          theme='dark'\r\n          inlineCollapsed={false}\r\n        >\r\n          {\r\n            modes.map((mode) => (\r\n              <Menu.Item key={mode.id}>\r\n                <NavLink to={`/${mode.id}`}>{mode.value}</NavLink>\r\n              </Menu.Item>\r\n            ))\r\n          }\r\n        </Menu>\r\n      </nav>\r\n\r\n      <Menu\r\n        mode='horizontal'\r\n        theme='dark'\r\n        inlineCollapsed={false}\r\n        className={classes['header-login']}\r\n      >\r\n        <Menu.SubMenu\r\n          icon={<UserOutlined />}\r\n          title={userContext.user?.name}\r\n        >\r\n          <Menu.Item\r\n            className={classes.logout}\r\n            icon={<LogoutOutlined />}\r\n          >\r\n            Выход\r\n          </Menu.Item>\r\n        </Menu.SubMenu>\r\n      </Menu>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { useReactToPrint } from 'react-to-print';\r\nimport { Tooltip } from 'antd';\r\nimport { PrinterOutlined } from '@ant-design/icons';\r\nimport { TPrintMode, usePrintPDFContext } from '../../../context/PrintPDFContext';\r\nimport { useCallback, useEffect, useMemo } from 'react';\r\nimport { useModalWithSelect } from '../ModalWithSelect';\r\n\r\nexport const PrintPDF: React.FC = () => {\r\n  const { dataPrintRef, setDataPrintMode, dataPrintMode } = usePrintPDFContext();\r\n\r\n  const handleOpen = () => toggleOpen(true);\r\n\r\n  const print = useReactToPrint({\r\n    // content: () => dataPrintRef ? dataPrintRef.current : null,\r\n    content: () => (\r\n      dataPrintRef\r\n        ? document.getElementsByClassName('ant-table-container')[0]\r\n        : null\r\n    ),\r\n    onAfterPrint: () => {\r\n      setDataPrintMode(undefined)\r\n      toggleOpen(false);\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (['print', 'current'].includes(dataPrintMode as string)) print();\r\n  }, [print, dataPrintMode]);\r\n\r\n  const handlePrint = useCallback((mode: TPrintMode) => {\r\n    setDataPrintMode(mode);\r\n  }, [setDataPrintMode]);\r\n\r\n  const listOptions = useMemo(() => [\r\n    {\r\n      optionTitle: 'Текущая страница',\r\n      optionValue: 'current',\r\n    },\r\n    {\r\n      optionTitle: 'Все страницы',\r\n      optionValue: 'all',\r\n    }\r\n  ], []);\r\n\r\n  const modalTitle = 'Распечатать все страницы или текущую?';\r\n  const [toggleOpen, ModalPrintSelect] = useModalWithSelect(modalTitle, listOptions, handlePrint);\r\n\r\n  return (\r\n    <Tooltip\r\n      placement='bottomLeft'\r\n      title='Печать в PDF'\r\n      className='tooltip'\r\n    >\r\n      {ModalPrintSelect}\r\n\r\n      <PrinterOutlined onClick={handleOpen} style={{ fontSize: '30px' }}/>\r\n    </Tooltip>\r\n  )\r\n}\r\n","import { useCallback, useState } from 'react';\r\nimport { Modal, Radio, RadioChangeEvent, Space } from 'antd';\r\nimport { TPrintMode } from '../../../context/PrintPDFContext';\r\n\r\ntype TUseModalWithSelect = (\r\n  title: string,\r\n  list: {\r\n    optionTitle: string,\r\n    optionValue: string,\r\n  }[],\r\n  onSubmit: (value: TPrintMode) => void,\r\n) => [\r\n  (mode: boolean) => void,\r\n  JSX.Element\r\n];\r\n\r\nexport const useModalWithSelect: TUseModalWithSelect = (title, list, onSubmit) => {\r\n  const [value, setValue] = useState<TPrintMode>();\r\n  const [isOpen, setIsOpen] = useState<boolean>(false);\r\n\r\n  const handleToggle = useCallback((mode: boolean) => setIsOpen(mode), [])\r\n\r\n  const handleChange = (e: RadioChangeEvent) => setValue(e.target.value);\r\n  const handleSubmit = () => onSubmit(value);\r\n  const handleClose = () => handleToggle(false);\r\n\r\n  return [\r\n    handleToggle,\r\n    <Modal\r\n      title={title}\r\n      onOk={handleSubmit}\r\n      onCancel={handleClose}\r\n      visible={isOpen}\r\n      okButtonProps={{ disabled: !value }}\r\n    >\r\n      <Radio.Group onChange={handleChange} value={value}>\r\n        <Space direction=\"vertical\">\r\n          {\r\n            list.map(({optionTitle, optionValue}) => (\r\n              <Radio key={optionValue} value={optionValue}>{optionTitle}</Radio>\r\n            ))\r\n          }\r\n        </Space>\r\n      </Radio.Group>\r\n    </Modal>\r\n  ];\r\n}\r\n","import React, { memo, useEffect, useState } from 'react';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Menu, Tooltip } from 'antd';\r\nimport {\r\n  // PrinterOutlined,\r\n  SettingOutlined,\r\n  PlusCircleTwoTone,\r\n} from '@ant-design/icons';\r\nimport DataAddModal from '../Modals/DataAddModal';\r\nimport {dataAddAction} from \"../../storages/actions/data\";\r\nimport classes from './Sidebar.module.scss';\r\nimport useGetTablename from \"../../utils/hooks/useGetTablename\";\r\nimport useDataSelector from \"../../storages/selectors/data\";\r\nimport { PrintPDF } from '../UI/PrintPDF';\r\n\r\nconst Sidebar: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const [sidebarAction, setSidebarAction] = useState<string>('');\r\n\r\n  const tablename = useGetTablename();\r\n\r\n  const {isError: isErrorData, isLoading: isLoadingData} = useDataSelector();\r\n\r\n  const handleAddData = () => setSidebarAction('addData');\r\n\r\n  const handleCloseModal = () => setSidebarAction('');\r\n\r\n  useEffect(() => {\r\n    if (!isErrorData && !isLoadingData) handleCloseModal();\r\n  }, [isErrorData, isLoadingData])\r\n\r\n  return (\r\n    <Menu\r\n      mode='vertical'\r\n      theme='dark'\r\n      className={classes.sidebar}\r\n      selectedKeys={[sidebarAction]}\r\n    >\r\n      <DataAddModal\r\n        isOpen={sidebarAction === 'addData'}\r\n        onAddHandler={(data) => {\r\n          dispatch(dataAddAction(tablename, data));\r\n        }}\r\n        onClose={handleCloseModal}\r\n      />\r\n\r\n      <Menu.Item key='addData' className={classes['sidebar__menu-item']}>\r\n        <Tooltip placement='bottomLeft' title='Добавить' className='tooltip'>\r\n          <PlusCircleTwoTone\r\n            className={classes['sidebar__add-icon']}\r\n            style={{ fontSize: '30px' }}\r\n            twoToneColor='#52c41a'\r\n            onClick={handleAddData}\r\n          />\r\n        </Tooltip>\r\n      </Menu.Item>\r\n\r\n      <Menu.Item key='printPDF' className={classes['sidebar__menu-item']}>\r\n        <PrintPDF />\r\n      </Menu.Item>\r\n\r\n      <Menu.SubMenu key='settings'\r\n        className={classes['sidebar__menu-submenu']}\r\n        icon={<SettingOutlined style={{ fontSize: '30px' }} />}\r\n      >\r\n        <Menu.Item>Цветовая тема</Menu.Item>\r\n        <Menu.Item>Инструкция</Menu.Item>\r\n      </Menu.SubMenu>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default memo(Sidebar);\r\n","import React from 'react';\r\n// import { TableRow, TableCell } from '@material-ui/core';\r\nimport LoadingComponent from '../LoadingComponent';\r\n\r\ntype TSuspenseFallback = {\r\n  type: 'loading' | 'textNode';\r\n};\r\n\r\nconst Index: React.FC<TSuspenseFallback> = ({ type }) => {\r\n  return (\r\n    <>\r\n      {type === 'loading' && <LoadingComponent />}\r\n      {type === 'textNode' && <p>...</p>}\r\n      {/* {type === 'row' && (\r\n        <TableRow>\r\n          <TableCell>...</TableCell>\r\n        </TableRow>\r\n      )} */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(Index);\r\n","import { Suspense, lazy, useEffect } from 'react';\r\nimport { Routes, Route, useLocation, useNavigate } from 'react-router-dom';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\nimport SuspenseFallback from '../UI/SuspenseFallback';\r\nimport classes from './Content.module.scss';\r\n\r\nconst DataTable = lazy(() => import('../DataTable'));\r\nconst DataCalendar = lazy(() => import('../DataCalendar'));\r\n\r\nconst Content: React.FC = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (location.pathname === '/') navigate('/task');\r\n  }, [location, navigate]);\r\n\r\n  return (\r\n    <main className={classes.content}>\r\n      <Sidebar />\r\n      <Routes >\r\n        <Route path=\"calendar\"\r\n          element={\r\n            <Suspense fallback={<SuspenseFallback type=\"loading\" />}>\r\n              <DataCalendar mode='discussion'/>\r\n            </Suspense>\r\n          }\r\n        />\r\n\r\n        <Route path=\"*\"\r\n          element={\r\n            <Suspense fallback={<SuspenseFallback type=\"loading\" />}>\r\n              <DataTable />\r\n            </Suspense>\r\n          }\r\n        />\r\n      </Routes >\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Content;\r\n","export const dataCounterFactory = (data, mode) => {\r\n  const START_COUNT = {\r\n    task: data.task.length,\r\n    discussion: data.discussion.length,\r\n  }\r\n  let counter = START_COUNT[mode];\r\n\r\n  const increase = () => ++counter;\r\n\r\n  return increase;\r\n}\r\n","import axios from 'axios';\r\nimport MockAdapter from 'axios-mock-adapter';\r\nimport { urlApi } from '../../constants/constants';\r\nimport { dataCounterFactory } from './utils';\r\n\r\nconst user = require('../../constants/dummyData/user.json');\r\nconst developers = require('../../constants/dummyData/developers.json');\r\nconst projects = require('../../constants/dummyData/projects.json');\r\n\r\nconst metaData = {\r\n  task: null,\r\n  discussion: null,\r\n  calendar: null,\r\n  event: null,\r\n};\r\n\r\nmetaData.task = require('../../constants/dummyData/task_meta.json');\r\nmetaData.discussion = require('../../constants/dummyData/discussion_meta.json');\r\nmetaData.calendar = require('../../constants/dummyData/calendar_meta.json');\r\nmetaData.event = require('../../constants/dummyData/event_meta.json');\r\n\r\nconst data = {\r\n  task: null,\r\n  discussion: null,\r\n  calendar: null,\r\n  event: null,\r\n};\r\n\r\ndata.task = require('../../constants/dummyData/task.json');\r\ndata.discussion = require('../../constants/dummyData/discussion.json');\r\ndata.calendar = require('../../constants/dummyData/calendar.json');\r\ndata.event = require('../../constants/dummyData/event.json');\r\n\r\nconst mock = new MockAdapter(axios, { delayResponse: 100 });\r\n\r\nconst dataCount = {\r\n  task: dataCounterFactory(data, \"task\"),\r\n  discussion: dataCounterFactory(data, \"discussion\"),\r\n};\r\n\r\nconst replyPostWithOK = (mode) => (mockResponseConfig) => {\r\n  const body = JSON.parse(mockResponseConfig.data);\r\n  return [200, { id: dataCount[mode](), ...body}]\r\n}\r\n\r\nexport default function setMockAdapter() {\r\n  // get basic information\r\n  mock.onGet(`${urlApi}/user/`).reply(200, user);\r\n  mock.onGet(`${urlApi}/developer/`).reply(200, developers);\r\n  mock.onGet(`${urlApi}/project/`).reply(200, projects);\r\n\r\n  // get meta data information\r\n  mock.onGet(`${urlApi}/task-meta/`).reply(200, metaData.task);\r\n  mock.onGet(`${urlApi}/discussion-meta/`).reply(200, metaData.discussion);\r\n  mock.onGet(`${urlApi}/calendar-meta/`).reply(200, metaData.calendar);\r\n  mock.onGet(`${urlApi}/event-meta/`).reply(200, metaData.event);\r\n\r\n  // get data\r\n  mock.onGet(`${urlApi}/task/`).reply(200, data.task);\r\n  mock.onGet(`${urlApi}/discussion/`).reply(200, data.discussion);\r\n  mock.onGet(`${urlApi}/calendar/`).reply(200, data.calendar);\r\n  mock.onGet(`${urlApi}/event/`).reply(200, data.event);\r\n\r\n  // put data\r\n  // mock.onPut(`${urlApi}/task/`).reply(404);\r\n  mock.onPut(`${urlApi}/task/`).reply(replyPostWithOK(\"task\"));\r\n  mock.onPut(`${urlApi}/discussion/`).reply(replyPostWithOK(\"discussion\"));\r\n\r\n  // patch data\r\n  mock.onPatch(`${urlApi}/task/`).reply(replyPostWithOK(\"task\"));\r\n  mock.onPatch(`${urlApi}/discussion/`).reply(replyPostWithOK(\"discussion\"));\r\n\r\n  // delete data\r\n  mock.onDelete(`${urlApi}/task/`).reply(replyPostWithOK(\"task\"));\r\n  mock.onDelete(`${urlApi}/discussion/`).reply(replyPostWithOK(\"discussion\"));\r\n\r\n  // post data\r\n  mock.onPost(`${urlApi}/task/`).reply(200, { status: 'OK', error: '' });\r\n  mock.onPost(`${urlApi}/discussion/`).reply(200, { status: 'OK', error: '' });\r\n}\r\n","import React from \"react\";\nimport Header from \"./components/Header\";\nimport Content from \"./components/Content\";\nimport classes from './App.module.scss';\n\nimport setMockAdapter from './utils/apiMockAdapter';\nsetMockAdapter();\n\nconst App: React.FC = () => {\n  return (\n    <div className={classes.main}>\n      <Header />\n      <Content />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { UserContextProvider } from './context/UserContext';\nimport { StorageProvider } from './storages/storage';\nimport App from './App';\nimport './index.css';\nimport 'antd/dist/antd.css';\nimport { DictionaryContextProvider } from './context/DictionaryContext';\nimport { PrintPDFContextProvider } from './context/PrintPDFContext';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter >\n      <UserContextProvider>\n        <DictionaryContextProvider>\n          <StorageProvider>\n            <PrintPDFContextProvider>\n              <App />\n            </PrintPDFContextProvider>\n          </StorageProvider>\n        </DictionaryContextProvider>\n      </UserContextProvider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","import axios from \"axios\";\r\nimport React, { useCallback, useContext, useMemo, useState } from \"react\";\r\nimport { TDictionary } from \"../types/TDictionary\";\r\nimport { TObject } from \"../types/TObject\";\r\n\r\nexport type TGetDataUrl = { getDataUrl: string };\r\nexport type TMetadataDictionary = Record<string, string>[] | TGetDataUrl;\r\n\r\ninterface IDictionaryContext {\r\n  dictionary: TDictionary;\r\n  setDictionary: (parameter: string, parameterDictionary: TMetadataDictionary) => void;\r\n};\r\n\r\nconst mapDictionaryArrayToObject = (array: Record<string, string>[]): TObject<string> => {\r\n  return Object.fromEntries(\r\n    array.map((value) => [value.value, value.text])\r\n  )\r\n}\r\n\r\nconst DictionaryContext = React.createContext<IDictionaryContext>({} as IDictionaryContext);\r\n\r\nconst useDictionaryContext = () => {\r\n  const context = useContext(DictionaryContext);\r\n  return context;\r\n}\r\n\r\nexport const DictionaryContextProvider: React.FC = ({children}) => {\r\n  const [dict, setDict] = useState<IDictionaryContext[\"dictionary\"]>({});\r\n\r\n  const dictionary = useMemo(() => dict, [dict]);\r\n\r\n  const setDictionary = useCallback((\r\n    parameter: string,\r\n    parameterDictionary: TMetadataDictionary\r\n  ) => {\r\n    if ((parameterDictionary as TGetDataUrl).getDataUrl) {\r\n      const url = (parameterDictionary as TGetDataUrl).getDataUrl;\r\n\r\n      axios.get(url)\r\n        .then((response) => {\r\n          setDict((prev) => {\r\n            return {\r\n              ...prev,\r\n              [parameter]: mapDictionaryArrayToObject(response.data as Record<string, string>[])\r\n            }\r\n          });\r\n        })\r\n        .catch(console.log)\r\n    } else {\r\n      setDict((prev) => {\r\n        return {\r\n          ...prev,\r\n          [parameter]: mapDictionaryArrayToObject(parameterDictionary as Record<string, string>[])\r\n        }\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <DictionaryContext.Provider value={{\r\n      dictionary,\r\n      setDictionary\r\n    }}>\r\n      {children}\r\n    </DictionaryContext.Provider>\r\n  );\r\n}\r\n\r\nexport default useDictionaryContext;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Sidebar_sidebar__2gC4b\",\"sidebar__menu-item\":\"Sidebar_sidebar__menu-item__1hyOG\",\"sidebar__menu-submenu\":\"Sidebar_sidebar__menu-submenu__27xks\",\"sidebar__add-icon\":\"Sidebar_sidebar__add-icon__1xUJM\"};"],"sourceRoot":""}